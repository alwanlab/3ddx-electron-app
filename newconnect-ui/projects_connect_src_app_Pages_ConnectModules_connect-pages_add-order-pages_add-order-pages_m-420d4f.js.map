{"version":3,"file":"projects_connect_src_app_Pages_ConnectModules_connect-pages_add-order-pages_add-order-pages_m-420d4f.js","mappings":"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","sources":["./projects/connect/src/app/Pages/ConnectModules/connect-pages/add-order-pages/add-order-pages-routing.module.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/add-order-pages/add-order-pages.module.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/add-order-pages/add-order/add-order.component.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/add-order-pages/add-order/add-order.component.html","./projects/connect/src/app/Resolvers/Doctor-List/doctor-list.resolver.ts","./projects/connect/src/app/Services/OrderServices/doctors.service.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport { DoctorListResolver } from 'projects/connect/src/app/Resolvers/Doctor-List/doctor-list.resolver';\nimport { OrderDetailsResolver } from 'projects/connect/src/app/Resolvers/Order-Details/order-details.resolver';\nimport {AddOrderComponent} from './add-order/add-order.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddOrderComponent,\n    data: {breadcrumbs: ['Add New Order']},\n    resolve: {\n      DoctorList: DoctorListResolver\n    }\n  },\n  {\n    path: ':orderId',\n    component: AddOrderComponent,\n    data: {breadcrumbs: ['Add To Order']},\n    resolve: {\n      orderDetails: OrderDetailsResolver\n    }\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    OrderDetailsResolver\n  ]\n})\nexport class AddOrderPagesRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddOrderPagesRoutingModule } from './add-order-pages-routing.module';\nimport { SharedComponentsModule } from 'shared/shared-components/shared-components.module';\nimport { AddOrderComponent } from './add-order/add-order.component';\nimport { AngularMaterialModule } from 'shared/shared-modules/angular-material.module';\nimport { DoctorListResolver } from 'projects/connect/src/app/Resolvers/Doctor-List/doctor-list.resolver';\n\n\n\n@NgModule({\n\tdeclarations: [\n\t\tAddOrderComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tAddOrderPagesRoutingModule,\n\t\tSharedComponentsModule,\n\t\tAngularMaterialModule\n\t],\n\tproviders: [\n\t\tDoctorListResolver\n\t]\n})\nexport class AddOrderPagesModule { }\n","import { Component, DoCheck, OnInit, ViewChild } from '@angular/core';\nimport { ERequestTypes } from 'projects/connect/src/app/Models/Enums/RequestTypes/RequestTypes';\nimport {\n  ConversionData,\n  OrderService,\n  ReportData,\n  RestorationData,\n  SurgicalguideData,\n  TreatmentPlanData\n} from 'projects/connect/src/app/Models/Interfaces/Order/OrderService.model';\nimport { AddOrderService } from 'projects/connect/src/app/Services/OrderServices/AddOrderService/add-order.service';\nimport { ServiceNameEnum } from 'shared/shared-enums/ServiceNameEnum';\nimport { OrderSharedService } from '../../../../../../../../../shared/shared-services/order-shared.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ISharedDoctor } from 'shared/shared-interfaces/doctors';\nimport { OrderCostService } from 'projects/connect/src/app/Models/Interfaces/Order/OrderCostService.model';\nimport { OrderCost } from 'projects/connect/src/app/Models/Interfaces/Order/OrderCostResponse.model';\nimport { ResponseCodeEnum } from 'shared/shared-enums/ResponseCodeEnum';\nimport { ToastrService } from 'shared/shared-services/toastr.service';\nimport { UploadService } from 'projects/connect/src/app/Services/UploadService/upload.service';\nimport { UploadProgressService } from 'shared/shared-services/upload-progress.service';\nimport { GenerateOrderDataService } from 'shared/shared-services/generate-order-data.service';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { OrderListService } from 'projects/connect/src/app/Services/OrderServices/OrderListService/order-list.service';\nimport { ApplianceData } from 'projects/connect/src/app/Models/Interfaces/APIs/ApplianceData.model';\nimport { AddOrderFormComponent } from 'shared/shared-components/shared-forms/add-order-form/add-order-form.component';\nimport { DateService } from '../../../../../../../../../shared/shared-services/date.service';\nimport {SubOrderType} from '../../../../../../../../../shared/shared-static-data/SubOrderType';\nimport {ActionsService} from '../../../../../Services/OrderServices/actions/actions.service';\n\n/**\n * Copyright (c) 3ddx\n *\n * @summary Add Order Form Component\n * @author Basel Elsawy\n *\n * Created at     : 2021\n * Last modified  : 2021-11-28\n */\n@Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css']\n})\nexport class AddOrderComponent implements OnInit, DoCheck {\n  isSelectOrder: boolean = false;\n  @ViewChild('orderform') public orderform!: AddOrderFormComponent;\n  doctors!: ISharedDoctor[];\n  orderCost!: OrderCost;\n  orderData = {} as any;\n  buttonOrders = {\n    conversion: false,\n    report: false,\n    restoration: false,\n    treatmentPlan: false,\n    surgicalGuide: false\n  };\n  isGMRFBothArchOfInterest: boolean = false;\n  orderDetails: any;\n  orderId!: number;\n  isModelScanConv: boolean = false;\n  isModelScanSG: boolean = false;\n  restype: any;\n  /**\n   * The Requirements For The Construction Of The Component\n   * @param route For using ActivatedRoute\n   * @param orderService for using order shared service\n   * @param addOrderService for using add order service\n   * @param toastService for using toaster service\n   * @param uploadService for using upload service\n   * @param orderServices for using order list service\n   * @param uploadProgressService for using upload progress service\n   * @param generateOrderDataService for using generate order service\n   * @param router for routing\n   * @param dateService\n   * @param orderListService\n   */\n  constructor(\n    private orderService: OrderSharedService,\n    private addOrderService: AddOrderService,\n    private route: ActivatedRoute,\n    private toastService: ToastrService,\n    private uploadService: UploadService,\n    private orderServices: OrderListService,\n    private uploadProgressService: UploadProgressService,\n    private generateOrderDataService: GenerateOrderDataService,\n    private router: Router,\n    private dateService: DateService,\n    private orderListService: OrderListService,\n    private actionsService: ActionsService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getDoctorList();\n    this.getOrderId();\n  }\n\n  /**\n   * get order's id and details\n   * @return void\n   */\n  getOrderId(): void {\n    this.route.params.subscribe(res => {\n      this.orderId = res.orderId;\n      if (this.orderId) {\n        this.getOrderDetails();\n      }\n    });\n  }\n  /**\n   * get order details\n   * @return void\n   */\n  getOrderDetails(): void {\n    this.route.data.subscribe(res => {\n      if (res.orderDetails) {\n        this.orderDetails = res.orderDetails.data.VIEW_ORDER_ALL;\n        if (this.orderDetails[0].conversionID) {\n          this.buttonOrders.conversion = true;\n        }\n        if (this.orderDetails[0].reportID) {\n          this.buttonOrders.report = true;\n        }\n        if (this.orderDetails[0].restorationID) {\n          this.buttonOrders.restoration = true;\n        }\n        if (this.orderDetails[0].treatmentPlanID) {\n          this.buttonOrders.treatmentPlan = true;\n        }\n        if (this.orderDetails[0].surgicalGuideID) {\n          this.buttonOrders.surgicalGuide = true;\n        }\n      }\n    });\n  }\n  /**\n   * get doctors list\n   * @return void\n   */\n  getDoctorList(): void {\n    this.route.data.subscribe(doctor => {\n      if (doctor.DoctorList) {\n        this.doctors = doctor.DoctorList.reponses[0].data[0].scanCenterDoctors;\n\n      }\n    });\n  };\n\n  ngDoCheck() {\n    this.isSelectOrder = (\n      this.orderService.buttons.conversion ||\n      this.orderService.buttons.treatmentPlan ||\n      this.orderService.buttons.surgicalGuide ||\n      this.orderService.buttons.restorations ||\n      this.orderService.buttons.radiologyReport ||\n      this.orderService.buttons.teethChart\n    ) && this.orderCost != null && ((this.orderform.stepper.selectedIndex > 1 && !this.orderDetails) || (this.orderform.stepper.selectedIndex >= 1 && this.orderDetails));\n  }\n  /**\n   * check software\n   * @param software order's data\n   * @return number\n   */\n  checkSoftware(software: any): number {\n      if (software.conversionForm) {\n        return software.conversionForm?.software;\n      } else if (software.treatmentPlanForm) {\n        return software.treatmentPlanForm?.software;\n      } else if (software.surgicalGuideForm) {\n        return software.surgicalGuideForm?.software;\n      } else {\n        return 5\n      }\n  };\n\n  /**\n   * check portal\n   * @param portable order's data\n   * @return boolean\n   */\n  checkPortable(portable: any): boolean {\n    let isPortable;\n    if (portable.conversionForm) {\n      isPortable = portable.conversionForm.portableVersion;\n    } else if (portable.treatmentPlanForm) {\n      isPortable = portable.treatmentPlanForm.portableVersion;\n    }\n    return isPortable === 1 ? false : true;\n  };\n  /**\n   * check model scan\n   * @param event order's data\n   * @return boolean\n   */\n  checkModelScan(event: any): boolean {\n    let modelScan;\n    if (event?.conversionForm) {\n      modelScan = event.conversionForm.modelScan;\n      return modelScan === 0 ? false : true;\n    } else {\n      return modelScan = false;\n    }\n  }\n  /**\n   * get user currency\n   * @return number\n   */\n  getCurrency(): number {\n    const currency = localStorage.getItem('userCurrencySymbol');\n    if (currency === '$') {\n      return 0;\n    } else if (currency === '€') {\n      return 1;\n    } else {\n      return 2;\n    }\n  }\n  /**\n   * on reload get order's data\n   * @return void\n   */\n  onReloadOrder(): void {\n    this.orderServices.getOrderById(this.orderId).subscribe(res => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        this.orderData = this.generateOrderDataService.onGenerateArr(res.data.VIEW_ORDER_ALL)[0];\n      }\n    });\n  }\n  /**\n   * create order general comment\n   * @param event submitted order OBJ\n   * @return string\n   */\n  createGeneralComment(event: any): string {\n    let generalComment = '';\n    if (event.conversionForm?.generalComment) {\n      generalComment = generalComment + `\\nConversion: ${event.conversionForm.generalComment}`;\n    }\n    if (event.treatmentPlanForm?.generalComment) {\n      generalComment = generalComment + `\\nTP: ${event.treatmentPlanForm.generalComment}`;\n    }\n    if (event.surgicalGuideForm?.generalComment) {\n      generalComment = generalComment + `\\nSurgical Guide: ${event.surgicalGuideForm.generalComment}`;\n    }\n    if (event.restorationForm?.generalComment) {\n      generalComment = generalComment + `\\nRestoration: ${event.restorationForm.generalComment}`;\n    }\n    return generalComment;\n  }\n  /**\n   * checkExpress guide software\n   * @return number\n   */\n  checkExpress(order: any): number {\n    if ((order.treatmentPlanForm || order.surgicalGuideForm) &&\n      ((this.buttonOrders.conversion && this.orderDetails[0].softwareEnumId === 3) || !this.buttonOrders.conversion)) {\n        return 1;\n    }\n    else {\n      return 0;\n    }\n  }\n  /**\n   * submit adding order\n   * @param event order's data\n   * @return void\n   */\n  onSubmit(event: any): void {\n    let generalComments = '';\n    let orderService: OrderService = {\n      ConditionsAnded: false,\n      columns: [\n        'orderId',\n        'orderCommonId',\n        'orderEnum',\n        'patientName',\n        'operatorId',\n        'doctorLastName',\n        'scanningCenterFirstName',\n        'isLaserScan',\n        'orderEnumId',\n        'statusId',\n        'hasIntraoralScans',\n        'clientToBeBilled',\n        'portableFileName',\n        'restorationType'\n      ],\n      abutmentSites: this.orderService.teethChart.abutmentSites,\n      clientComment: this.createGeneralComment(event),\n      crownSites: this.orderService.teethChart.crownSites,\n      implantSites: this.orderService.teethChart.implantSites,\n      missingTeeth: this.orderService.teethChart.missingTeeth,\n      teethToBeExtracted: this.orderService.teethChart.teethToBeExtracted,\n      isPortable: this.checkPortable(event),\n      modelScan: this.checkModelScan(event),\n      patientName: event.basicInfoFormGroup.patientName,\n      scanningCenterId: this.getScanningCenterId(),\n      serviceName: ServiceNameEnum.VIEW_ORDER_ALL,\n      softwareEnumId: this.checkSoftware(event),\n      isExpress: this.checkExpress(event),\n      doctorId: this.getDocotrId(event),\n      timeSurgery: event.surgicalGuideForm ? this.dateService.timeStampToEST(event.surgicalGuideForm.scheduledSurgeryData, event.surgicalGuideForm.scheduledSurgeryTime)?.getTime() / 1000 : 0,\n      formatEnumId: event.conversionForm ? event.conversionForm.format : this.getFormatId(event)\n    };\n    if (this.orderId) {\n      orderService.orderId = this.orderId;\n      orderService.doctorId = this.orderDetails.doctorId;\n      orderService.scanningCenterId = this.orderDetails.scanningCenterId;\n    }\n    let orderServiceObj = { ...orderService };\n    if (event.conversionForm) {\n      let conversionData: ConversionData = {\n        currency: this.getCurrency(),\n        clientToBeBilledId: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor,\n        separateDoubleArchOrder: (event.conversionForm.mandible !== 20 && event.conversionForm.maxilla !== 20 && event.conversionForm.modelScan !== 1) ? event.conversionForm.separateDoubleArchOrder : true,\n        softwareFormat: [],\n        isRush: false,\n        mandibleConversionEnumId: event.conversionForm.mandible,\n        mandibleSegmentationEnumId: event.conversionForm.typeMandible,\n        maxillaConversionEnumId: event.conversionForm.maxilla,\n        maxillaSegmentationEnumId: event.conversionForm.typeMaxilla\n      };\n      orderServiceObj = {\n        ...orderServiceObj, ...{\n          conversionData: conversionData\n        }\n      };\n    }\n\n    const uploadRest = event.restorationForm?.lowerFile && event.restorationForm?.upperFile && event.restorationForm?.biteFile;\n\n    if (event.surgicalGuideForm?.guided === 1 || event.conversionForm?.modelScan === 1 || uploadRest) {\n      let applianceData = {\n        applinceDestenationAddress: \"USA\",\n        clientToBeBilledId: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor,\n        currency: this.getCurrency(),\n        hasIntraoralScans: event.surgicalGuideForm?.intraoralScan === 2 || uploadRest || event.conversionForm?.oral === 2 ? true : false,\n        isForMandible: false,\n        isForMaxilla: false,\n        isLaserScan: event.conversionForm?.modelScan === 1 || event.surgicalGuideForm?.guided === 1 || uploadRest ? true : false,\n        isPartiallyEdentulous: false,\n        isRush: false,\n        isTotallyEdentulous: false,\n        sendPVSImpression: false,\n        softwareFormat: []\n      }\n      orderServiceObj = {\n        ...orderServiceObj, ...{\n          applianceData: applianceData\n        }\n      }\n    }\n\n    if (event.treatmentPlanForm) {\n      let treatmentPlanData: TreatmentPlanData = {\n        currency: this.getCurrency(),\n        isReview: event.treatmentPlanForm.isReviewTP,\n        clientToBeBilledId: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor,\n        prosthesis: event.treatmentPlanForm.prosthesisType,\n        isRush: false,\n        softwareFormat: [],\n        surgicalProcedures: event.treatmentPlanForm.surgicalPlan,\n        typeofImplant: event.treatmentPlanForm.implantType,\n      };\n      orderServiceObj = {\n        ...orderServiceObj,\n        ...{\n          treatmentPlanData: treatmentPlanData\n        }\n      };\n    }\n    if (event.surgicalGuideForm) {\n      let surgicalguideData: SurgicalguideData = {\n        clientToBeBilledId: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor,\n        currency: this.getCurrency(),\n        fixationFunctionality: event.surgicalGuideForm.fixationPinsDrills,\n        ordersGuideKitEnumId: event.surgicalGuideForm.typeofGuide != 5 ? event.surgicalGuideForm.typeofGuide : event.surgicalGuideForm.guidedSurgeryKitType,\n        rushIfPossible: event.surgicalGuideForm.rush === 1 ? false : true,\n        softwareFormat: [],\n        sleeveDiameter: 0,\n        timeSurgery: event.surgicalGuideForm ? this.dateService.timeStampToEST(event.surgicalGuideForm.scheduledSurgeryData, event.surgicalGuideForm.scheduledSurgeryTime)?.getTime() / 1000 : 0,\n        ordersGuideSoftwareSupportEnum: {\n          ordersGuideSupportEnumId: event.surgicalGuideForm.guided,\n          ordersSoftwareEnumId: event.surgicalGuideForm.software\n        },\n        selectedExtraComponents: event.surgicalGuideForm.extracomponents\n          ? event.surgicalGuideForm.extracomponents.map((e: any) => ({ id: +e, comment: event.surgicalGuideForm.otherDesc }))\n          : []\n      };\n      orderServiceObj = {\n        ...orderServiceObj,\n        ...{\n          surgicalguideData: surgicalguideData\n        }\n      };\n    }\n    if (event.restorationForm) {\n      let restorationData: RestorationData = {\n        softwareFormat: [],\n        restorationType: event.restorationForm.restType,\n        shadeSys: event.restorationForm.shade,\n        shadeValue: event.restorationForm.teeth,\n        shadeSysOther: event.restorationForm.shadeOther,\n        abutmentMaterial: event.restorationForm.abutment,\n        crownMaterial: event.restorationForm.crown,\n        isPouring: event.restorationForm.pouring,\n        isRushRes: event.restorationForm.isRush,\n        retentionType: event.restorationForm.retentionType,\n        hasIntraOralScan: event.restorationForm.oral == 1 ? false : true,\n        archOfInterest: event.restorationForm.archOfInterest,\n        chairSideAssistance: event.restorationForm.chairSideAssistance,\n        userCNComment: '',\n        toBeBilled: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor\n      };\n      if (event.restorationForm.retentionTypeSpecify) {\n        restorationData.retentionTypeComment = event.restorationForm.retentionTypeSpecify;\n      }\n      if (event.restorationForm.abutmentSpecify) {\n        restorationData.abutmentMaterialComment = event.restorationForm.abutmentSpecify;\n      }\n      orderServiceObj = {\n        ...orderServiceObj, ...{\n          restorationData: restorationData\n        }\n      };\n    }\n    if (event.radiologyReportForm) {\n      let reportData: ReportData = {\n        isImplantPlanned: event.radiologyReportForm.implantPlanned == 1 ? false : true,\n        ReportSmallFieldOfView: false,\n        currency: this.getCurrency(),\n        softwareFormat: [],\n        isRuleOutPathology: event.radiologyReportForm.ruleOutPathology == 1 ? false : true,\n        isAirWayEvaluation: event.radiologyReportForm.airWayEvaluation == 1 ? false : true,\n        isEvaluateTMJ: event.radiologyReportForm.tmjevaluation == 1 ? false : true,\n        isEvaluateSinus: event.radiologyReportForm.sinusEvaluation == 1 ? false : true,\n        isEvaluateExistingImplant: event.radiologyReportForm.evaluateExistingImplant == 1 ? false : true,\n        isRush: event.radiologyReportForm.rushCase == 1 ? false : true,\n        relevantHistory: event.radiologyReportForm.relevant,\n        genderEnumId: event.basicInfoFormGroup.gender,\n        basicReport: event.radiologyReportForm.BasicReport == 1 ? false : true,\n        userCNComment: event.radiologyReportForm.generalComment ? event.radiologyReportForm.generalComment : '',\n        DOB: (this.dateService.timeStampToEST(event.radiologyReportForm.birthdate)?.getTime() / 1000 ).toString(),\n        dateImageAcquisition: this.dateService.timeStampToEST(event.radiologyReportForm.imagedate)?.getTime() / 1000,\n        clientToBeBilledId: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor\n      };\n\n      orderServiceObj = {\n        ...orderServiceObj, ...{\n          reportData: reportData\n        }\n      };\n\n    }\n\n    let apiData = { services: [orderServiceObj], requestType: ERequestTypes.ADD };\n\n    this.addOrderService.addOrder(apiData).subscribe(res => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        const orderArr = this.generateOrderDataService.onGenerateArrUpload(res.data.VIEW_ORDER_ALL);\n        this.toastService.addAlert('Order added successfully', 'Add Order', 'start');\n        if (event.srcResult && (this.orderService.buttons.conversion || this.orderService.buttons.treatmentPlan || this.orderService.buttons.radiologyReport)) {\n          this.orderServices.uploadingId.add(JSON.stringify({id: res.data.VIEW_ORDER_ALL[0].orderId, type: SubOrderType.CONVERSION.uploadType}));\n          let uploadFormData = this.GenerateOrderFormData(event.srcResult,\n            orderArr[0].uploadType, res.data.VIEW_ORDER_ALL[0].orderId, res.data?.VIEW_ORDER_ALL[1]?.orderId);\n          let currentIndex = ++this.uploadService.index;\n\n          let subscribeUpload = this.uploadService.onUploadFile(uploadFormData\n            , Number(localStorage.getItem('userCNId'))\n            , res.data.VIEW_ORDER_ALL[0].orderId, orderArr[0].orderStatus, event.srcResult.name, res.data.VIEW_ORDER_ALL[1]?.orderId).pipe(map((ev: any) => {\n              if (ev.type === HttpEventType.UploadProgress) {\n                this.uploadService.uploadDataNew[currentIndex].calculatedTime =\n                  this.uploadProgressService.calculateTimeRemain(ev.loaded, event.srcResult.size);\n                this.uploadService.uploadDataNew[currentIndex].progress =\n                  this.uploadProgressService.returnProgress(ev.loaded, ev.total);\n              } else if (ev instanceof HttpResponse) {\n                if (ev.body.responsCode === ResponseCodeEnum.OK) {\n                  this.toastService.addAlert('Uploaded Successfully', 'Upload File', 'start');\n                  this.orderServices.onReload();\n                  this.orderServices.removeUploadId(res.data.VIEW_ORDER_ALL[0].orderId, SubOrderType.CONVERSION.uploadType);\n                }\n              }\n            })).subscribe(res => {},\n            error =>  this.orderServices.removeUploadId(res.data.VIEW_ORDER_ALL[0].orderId, SubOrderType.CONVERSION.uploadType)\n          );\n          this.uploadService.uploadDataNew[currentIndex].subScribe = subscribeUpload;\n\n        }\n        if (this.orderService.buttons.restorations) {\n          if (event.restorationForm.upperFile || event.restorationForm.lowerFile || event.restorationForm.biteFile){\n            this.orderServices.uploadingId.add(JSON.stringify({id: res.data.VIEW_ORDER_ALL[0].orderId, type: SubOrderType.GFMR.uploadType}));\n          }\n          const orderData = orderArr[0].subOrders.find((e: any) => e.subOrderType.includes('Restoration'));\n          if (event.restorationForm.upperFile) {\n            const uploadFormData = this.GenerateOrderFormData(event.restorationForm.upperFile\n              , orderData.subOrderStatus?.uploadType, res.data.VIEW_ORDER_ALL[0].orderId, res.data?.VIEW_ORDER_ALL[1]?.orderId, \"upper\", false);\n            const currentIndex = ++this.uploadService.index;\n            const upperFileSub = this.uploadService.onUploadFile(uploadFormData\n              , Number(localStorage.getItem('userCNId'))\n              , res.data.VIEW_ORDER_ALL[0].orderId, orderData.subOrderStatus, event.restorationForm.upperFile.name, res.data.VIEW_ORDER_ALL[1]?.orderId).pipe(map((ev: any) => {\n                if (ev.type === HttpEventType.UploadProgress) {\n                  this.uploadService.uploadDataNew[currentIndex].calculatedTime =\n                    this.uploadProgressService.calculateTimeRemain(ev.loaded, event.restorationForm.upperFile.size);\n                  this.uploadService.uploadDataNew[currentIndex].progress =\n                    this.uploadProgressService.returnProgress(ev.loaded, ev.total);\n                  this.uploadService.uploadDataNew[currentIndex].subScribe = upperFileSub;\n                } else if (ev instanceof HttpResponse) {\n                  if (ev.body.responsCode === ResponseCodeEnum.OK) {\n                    this.toastService.addAlert('Uploaded Successfully', 'Upload File', 'start');\n                    if (event.restorationForm.lowerFile) {\n                      let uploadFormData = this.GenerateOrderFormData(event.restorationForm.lowerFile\n                        , orderData.subOrderStatus.uploadType, res.data.VIEW_ORDER_ALL[0].orderId, res.data?.VIEW_ORDER_ALL[1]?.orderId, \"lower\", false);\n                      let currentIndex = ++this.uploadService.index;\n                      let lowerFileSub = this.uploadService.onUploadFile(uploadFormData\n                        , Number(localStorage.getItem('userCNId'))\n                        , res.data.VIEW_ORDER_ALL[0].orderId, orderData.subOrderStatus, event.restorationForm.lowerFile.name, res.data.VIEW_ORDER_ALL[1]?.orderId).pipe(map((ev: any) => {\n                        if (ev.type === HttpEventType.UploadProgress) {\n                          this.uploadService.uploadDataNew[currentIndex].calculatedTime =\n                            this.uploadProgressService.calculateTimeRemain(ev.loaded, event.restorationForm.lowerFile.size);\n                          this.uploadService.uploadDataNew[currentIndex].progress =\n                            this.uploadProgressService.returnProgress(ev.loaded, ev.total);\n                          this.uploadService.uploadDataNew[currentIndex].subScribe = lowerFileSub;\n                        } else if (ev instanceof HttpResponse) {\n                          if (ev.body.responsCode === ResponseCodeEnum.OK) {\n                            this.toastService.addAlert('Uploaded Successfully', 'Upload File', 'start');\n                            if (event.restorationForm.biteFile) {\n                              let uploadFormData = this.GenerateOrderFormData(event.restorationForm.biteFile\n                                , orderData.subOrderStatus.uploadType, res.data.VIEW_ORDER_ALL[0].orderId, res.data?.VIEW_ORDER_ALL[1]?.orderId, \"bite\", true);\n                              let currentIndex = ++this.uploadService.index;\n                              let biteFileSub = this.uploadService.onUploadFile(uploadFormData\n                                , Number(localStorage.getItem('userCNId'))\n                                , res.data.VIEW_ORDER_ALL[0].orderId, orderData.subOrderStatus, event.restorationForm.biteFile.name, res.data.VIEW_ORDER_ALL[1]?.orderId).pipe(map((ev: any) => {\n                                if (ev.type === HttpEventType.UploadProgress) {\n                                  this.uploadService.uploadDataNew[currentIndex].calculatedTime =\n                                    this.uploadProgressService.calculateTimeRemain(ev.loaded, event.restorationForm.biteFile.size);\n                                  this.uploadService.uploadDataNew[currentIndex].progress =\n                                    this.uploadProgressService.returnProgress(ev.loaded, ev.total);\n                                  this.uploadService.uploadDataNew[currentIndex].subScribe = biteFileSub;\n                                } else if (ev instanceof HttpResponse) {\n                                  if (ev.body.responsCode === ResponseCodeEnum.OK) {\n                                    this.toastService.addAlert('Uploaded Successfully', 'Upload File', 'start');\n                                    this.orderServices.onReload();\n                                    this.orderServices.removeUploadId(res.data.VIEW_ORDER_ALL[0].orderId, SubOrderType.GFMR.uploadType);\n                                  }\n                                }\n                              })).subscribe(res => {},\n                                error => this.orderServices.removeUploadId(res.data.VIEW_ORDER_ALL[0].orderId, SubOrderType.GFMR.uploadType)\n                              );\n                            }\n                          }\n                        }\n                      })).subscribe(res => {},\n                        error => this.orderServices.removeUploadId(res.data.VIEW_ORDER_ALL[0].orderId, SubOrderType.GFMR.uploadType)\n                      );\n                    }\n                  }\n                }\n              })).subscribe(res => {},\n              error => this.orderServices.removeUploadId(res.data.VIEW_ORDER_ALL[0].orderId, SubOrderType.GFMR.uploadType)\n            );\n\n          }\n        }\n        if (!event.isAddAnotherOrder) {\n          if (!this.orderId) {\n            this.orderListService.clearSearchData();\n            this.orderListService.returnToFirstPage();\n          }\n          this.router.navigate(['connect-modules', 'View-Orders-page']);\n        }\n\n      }\n    });\n  }\n  /**\n   * generate order form data\n   */\n  GenerateOrderFormData(file: any, uploadType: string, orderId: string, orderId_2?: string, fileCaption?: string, isLastFileInBatch?: boolean) {\n    let uploadFormData = new FormData();\n    uploadFormData.append('userID', localStorage.getItem('userCNId') ?? '');\n    uploadFormData.append('token', localStorage.getItem('token') ?? '');\n    uploadFormData.append('file', file);\n    uploadFormData.append('scanType', uploadType);\n    uploadFormData.append('orderID_1', orderId);\n    if (orderId_2) {\n      uploadFormData.append('orderID_2', orderId_2);\n    }\n    if (fileCaption) {\n      uploadFormData.append('fileCaption', fileCaption);\n      uploadFormData.append('upperFileExtension', this.actionsService.getUploadExtenstions(this.actionsService.upperStlFileName));\n      uploadFormData.append('lowerFileExtension', this.actionsService.getUploadExtenstions(this.actionsService.lowerStlFileName));\n      uploadFormData.append('biteFileExtension',  this.actionsService.getUploadExtenstions(this.actionsService.biteStlFileName));\n    }\n    if (isLastFileInBatch != null || isLastFileInBatch != undefined)\n      uploadFormData.append('isLastFileInBatch', String(isLastFileInBatch));\n\n    return uploadFormData;\n  }\n  /**\n   * get scanning center's id\n   * @return number\n   */\n  getScanningCenterId(): number | null {\n    let typeUser = localStorage.getItem('type') ? localStorage.getItem('type') : 0;\n    let userId = localStorage.getItem('userCNId') ? Number(localStorage.getItem('userCNId')) : 0;\n    if (typeUser == 1 || typeUser == 3) {\n      return userId;\n    } else {\n      return null;\n    }\n  }\n  /**\n   * get doctor's id\n   * @param event order's data\n   * @return number\n   */\n  getDocotrId(event: any): number | null {\n    let typeUser = localStorage.getItem('type') ? localStorage.getItem('type') : 1;\n    let userId = localStorage.getItem('userCNId') ? Number(localStorage.getItem('userCNId')) : 0;\n    if (typeUser == 0 || typeUser == 2) {\n      return userId;\n    } else if (event.basicInfoFormGroup.doctor) {\n      return +event.basicInfoFormGroup.doctor;\n    } else {\n      return null;\n    }\n  }\n  /**\n   * get format id\n   * @param software order's software\n   * @return number\n   */\n  getFormatId(event: any): number {\n    let software = 0;\n    if (event?.conversionForm)\n      return event.conversionForm.format;\n    else if (event?.treatmentPlanForm)\n      software = event.treatmentPlanForm.software;\n    else if (event?.surgicalGuideForm)\n      software = event.surgicalGuideForm.software;\n\n    switch (software) {\n      case 1:\n        return 6;\n      case 3:\n        return 10;\n      case 4:\n        return 11;\n      case 6:\n        return 13;\n      default:\n        return 12;\n    }\n  }\n\n  /**\n   * calculate cost\n   * @param event order's data\n   * @return void\n   */\n  onChangeCost(event: any): void {\n    let orderService: OrderCostService = {\n      ConditionsAnded: true,\n      columns: [],\n      asc: false,\n      pageNumber: -1,\n      pageSize: -1,\n      sortedByColumnsIndices: [],\n      serviceName: ServiceNameEnum.CostCalculate,\n      orderDescription: {\n        missingTeeth: this.orderService.teethChart.missingTeeth,\n        implantSites: this.orderService.teethChart.implantSites,\n        teethToBeExtracted: this.orderService.teethChart.teethToBeExtracted,\n        isPortable: this.checkPortable(event),\n        modelScan: this.checkModelScan(event),\n        patientName: event.basicInfoFormGroup.patientName,\n        scanningCenterId: this.getScanningCenterId(),\n        softwareEnumId: this.checkSoftware(event),\n        doctorId: this.getDocotrId(event),\n        isExpress: this.checkExpress(event),\n        timeSurgery: null,\n        formatEnumId: event.conversionForm ? event.conversionForm.format : this.getFormatId(event),\n        abutmentSites: this.orderService.teethChart.abutmentSites,\n        crownSites: this.orderService.teethChart.crownSites,\n      }\n    };\n\n\n    let orderServiceObj = { ...orderService };\n    if (orderService.orderDescription.modelScan) {\n      let applianceData: ApplianceData = {\n        applinceDestenationAddress: 'USA',\n        currency: this.getCurrency(),\n        clientToBeBilledId: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor,\n        hasIntraoralScans: event.conversionForm.oral == 1 ? false : true,\n        isForMandible: false,\n        isForMaxilla: false,\n        isLaserScan: true,\n        isPartiallyEdentulous: false,\n        isRush: false,\n        isTotallyEdentulous: false,\n        sendPVSImpression: false,\n        softwareFormat: []\n      }\n      orderServiceObj.orderDescription = {\n        ...orderServiceObj.orderDescription, ...{\n          applianceData: applianceData\n        },\n      }\n    }\n    if (event.conversionForm) {\n      let conversionData: ConversionData = {\n        currency: this.getCurrency(),\n        clientToBeBilledId: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor,\n        separateDoubleArchOrder: event.conversionForm.separateDoubleArchOrder,\n        softwareFormat: [],\n        isRush: false,\n        mandibleConversionEnumId: event.conversionForm.mandible ? event.conversionForm.mandible : 0,\n        mandibleSegmentationEnumId: event.conversionForm.typeMandible,\n        maxillaConversionEnumId: event.conversionForm.maxilla ? event.conversionForm.maxilla : 0,\n        maxillaSegmentationEnumId: event.conversionForm.typeMaxilla\n      };\n      orderServiceObj.orderDescription = {\n        ...orderServiceObj.orderDescription, ...{\n          conversionData: conversionData\n        }\n      };\n      this.isModelScanConv = event.conversionForm.modelScan === 1;\n    }\n    if (event.treatmentPlanForm) {\n      let treatmentPlanData: TreatmentPlanData = {\n        currency: this.getCurrency(),\n        isReview: event.treatmentPlanForm.isReviewTP,\n        isRush: false,\n        clientToBeBilledId: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor,\n        prosthesis: event.treatmentPlanForm.prosthesisType,\n        softwareFormat: [],\n        surgicalProcedures: event.treatmentPlanForm.surgicalPlan,\n        typeofImplant: event.treatmentPlanForm.implantType,\n      };\n      orderServiceObj.orderDescription = {\n        ...orderServiceObj.orderDescription,\n        ...{\n          treatmentPlanData: treatmentPlanData\n        }\n      };\n    }\n    if (event.surgicalGuideForm) {\n      let surgicalguideData: SurgicalguideData = {\n        clientToBeBilledId: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor,\n        currency: this.getCurrency(),\n        fixationFunctionality: event.surgicalGuideForm.fixationPinsDrills,\n        ordersGuideKitEnumId: event.surgicalGuideForm.typeofGuide != 5 ? event.surgicalGuideForm.typeofGuide : event.surgicalGuideForm.guidedSurgeryKitType,\n        rushIfPossible: event.surgicalGuideForm.rush === 1 ? false : true,\n        softwareFormat: [],\n        sleeveDiameter: 0,\n        timeSurgery: event.surgicalGuideForm ? this.dateService.timeStampToEST(event.surgicalGuideForm.scheduledSurgeryData, event.surgicalGuideForm.scheduledSurgeryTime)?.getTime() / 1000 : 0,\n        ordersGuideSoftwareSupportEnum: {\n          ordersGuideSupportEnumId: event.surgicalGuideForm.guided,\n          ordersSoftwareEnumId: event.surgicalGuideForm.software\n        },\n        selectedExtraComponents: event.surgicalGuideForm.extracomponents\n          ? event.surgicalGuideForm.extracomponents.map((e: any) => ({ id: +e, comment: event.surgicalGuideForm.otherDesc }))\n          : []\n      };\n      orderServiceObj.orderDescription = {\n        ...orderServiceObj.orderDescription,\n        ...{\n          surgicalguideData: surgicalguideData\n        }\n      };\n      this.isModelScanSG = event.surgicalGuideForm.guided === 1;\n    }\n    if (event.restorationForm) {\n      this.restype = event.restorationForm.restType\n      let restorationData: RestorationData = {\n        softwareFormat: [],\n        restorationType: event.restorationForm.restType,\n        shadeSys: event.restorationForm.shade,\n        shadeValue: event.restorationForm.teeth,\n        shadeSysOther: event.restorationForm.shadeOther,\n        abutmentMaterial: event.restorationForm.abutment,\n        crownMaterial: event.restorationForm.crown,\n        isPouring: event.restorationForm.pouring,\n        isRushRes: event.restorationForm.isRush,\n        retentionType: event.restorationForm.retentionType,\n        hasIntraOralScan: event.restorationForm.oral == 1 ? false : true,\n        archOfInterest: event.restorationForm.archOfInterest,\n        chairSideAssistance: event.restorationForm.chairSideAssistance,\n        userCNComment: '',\n        toBeBilled: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor\n      };\n      if (event.restorationForm.retentionTypeSpecify) {\n        restorationData.retentionTypeComment = event.restorationForm.retentionTypeSpecify;\n      }\n      if (event.restorationForm.abutmentSpecify) {\n        restorationData.abutmentMaterialComment = event.restorationForm.abutmentSpecify;\n      }\n      orderServiceObj.orderDescription = {\n        ...orderServiceObj.orderDescription, ...{\n          restorationData: restorationData\n        }\n      };\n      this.isGMRFBothArchOfInterest = event.restorationForm.archOfInterest == 2;\n    }\n\n    if(this.orderId) {\n      orderServiceObj.orderDescription.orderId = +this.orderId;\n    }\n\n    if (event.radiologyReportForm) {\n      let reportData: ReportData = {\n        isImplantPlanned: event.radiologyReportForm.implantPlanned == 1 ? false : true,\n        basicReport: event.radiologyReportForm.BasicReport == 1 ? false : true,\n        ReportSmallFieldOfView: false,\n        currency: this.getCurrency(),\n        softwareFormat: [],\n        isRuleOutPathology: event.radiologyReportForm.ruleOutPathology == 1 ? false : true,\n        isAirWayEvaluation: event.radiologyReportForm.airWayEvaluation == 1 ? false : true,\n        isEvaluateTMJ: event.radiologyReportForm.tmjevaluation == 1 ? false : true,\n        isEvaluateSinus: event.radiologyReportForm.sinusEvaluation == 1 ? false : true,\n        isEvaluateExistingImplant: event.radiologyReportForm.evaluateExistingImplant == 1 ? false : true,\n        isRush: event.radiologyReportForm.rushCase == 1 ? false : true,\n        relevantHistory: event.radiologyReportForm.relevant,\n        genderEnumId: event.basicInfoFormGroup.gender,\n        userCNComment: '',\n        DOB: '',\n        dateImageAcquisition: 0,\n        clientToBeBilledId: event.basicInfoFormGroup.billing === 0 ? Number(localStorage.getItem('userCNId')) : event.basicInfoFormGroup.doctor\n      };\n\n      orderServiceObj.orderDescription = {\n        ...orderServiceObj.orderDescription, ...{\n          reportData: reportData\n        }\n      }\n    }\n\n    let apiData = { services: [orderServiceObj], requestType: ERequestTypes.VIEW }\n\n    this.addOrderService.calculateCost(apiData).subscribe(res => {\n      this.orderCost = res\n    });\n\n  }\n}\n","<div class=\"container\">\n    <div style=\"margin-bottom: 90px\" class=\"row justify-content-center h-100\">\n        <div style=\"margin-bottom: 50px\" [ngClass]=\"isSelectOrder ? 'col-md-9' : 'col-sm-12'\">\n            <mat-card class=\"example-card mt-5\">\n                <mat-card-title>\n                    Add Order\n\n                </mat-card-title>\n                <mat-card-content>\n                    <app-add-order-form #orderform [orderDetails]=\"orderDetails\" [buttonOrders]=\"buttonOrders\" [doctorsList]=\"doctors\" (recalculateCost)=\"onChangeCost($event)\" (ordersOBJ)=\"onSubmit($event)\"></app-add-order-form>\n                </mat-card-content>\n            </mat-card>\n        </div>\n        <div style=\"margin-bottom: 90px\" *ngIf=\"isSelectOrder\" class=\"col-md-3 col-sm-12 select-suborders mt-5\">\n            <mat-card class=\"example-card\">\n                <app-select-orders [isModelScanSG]=\"isModelScanSG\" [isModelScanConv] = \"isModelScanConv\" [restype]=\"restype\" [isGFMRBoth]=\"isGMRFBothArchOfInterest\" [orderCost]=\"orderCost\"></app-select-orders>\n            </mat-card>\n        </div>\n    </div>\n</div>\n","/**\n * Copyright (c) 3ddx\n *\n * @summary doctors data resolver\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2022-1-9\n */\nimport { Injectable } from '@angular/core';\nimport {\n\tResolve,\n\tRouterStateSnapshot,\n\tActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IMainResponse } from '../../Models/Interfaces/Main/MainResponse';\nimport { DoctorsService } from './../../Services/OrderServices/doctors.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DoctorListResolver implements Resolve<boolean> {\n  /**\n   * The Requirements For The Construction Of The resolver\n   * @param service for DoctorsService\n   */\n\tconstructor(private service: DoctorsService) {\n\t}\n  /**\n   * get Doctors list\n   * @param route for ActivatedRouteSnapshot\n   * @param state for RouterStateSnapshot\n   * @return Observable<any>\n   */\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n\t\treturn this.service.getDoctorList();\n\t}\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary get doctor list service\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2022-1-9\n */\nimport { Injectable } from '@angular/core';\nimport { APIName } from 'shared/API/APIName';\nimport { DataService } from '../DataService/data.service';\nimport { Observable } from 'rxjs';\nimport { IMainResponse } from '../../Models/Interfaces/Main/MainResponse';\nimport { ERequestTypes } from '../../Models/Enums/RequestTypes/RequestTypes';\nimport { IApiData } from '../../Models/Interfaces/APIs/apiData.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DoctorsService {\n\tReq = { requestType: ERequestTypes.VIEW, services: [] } as IApiData<any>;\n  /**\n   * The Requirements For The Construction Of The service\n   * @param dataService for managing Http methods\n   */\n\tconstructor(private dataService: DataService) { }\n  /**\n   * get doctor list\n   * @return Observable<IMainResponse>\n   */\n\tgetDoctorList(): Observable<IMainResponse> {\n\t\tthis.Req.services[0] = {\n\t\t\t\t\tConditionsAnded: false,\n\t\t\t\t\tcolumns: [],\n\t\t\t\t\tserviceName: \"VIEW_SCAN_CENTER_DOCTORS\",\n\t\t};\n\t\treturn this.dataService.post(APIName.doctors, this.Req);\n\t}\n}\n"],"names":[],"sourceRoot":"webpack:///"}