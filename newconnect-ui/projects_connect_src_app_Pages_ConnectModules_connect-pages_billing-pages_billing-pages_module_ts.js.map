{"version":3,"file":"projects_connect_src_app_Pages_ConnectModules_connect-pages_billing-pages_billing-pages_module_ts.js","mappings":"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","sources":["./projects/connect/src/app/Pages/ConnectModules/connect-pages/billing-pages/billing-pages-routing.module.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/billing-pages/billing-pages.module.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/billing-pages/billing/billing.component.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/billing-pages/billing/billing.component.html","./projects/connect/src/app/Pages/ConnectModules/connect-pages/billing-pages/charged/charged.component.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/billing-pages/charged/charged.component.html","./projects/connect/src/app/Pages/ConnectModules/connect-pages/billing-pages/not-charged/not-charged.component.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/billing-pages/not-charged/not-charged.component.html","./projects/connect/src/app/Resolvers/Billing-Resolver/Charged/charged.resolver.ts","./projects/connect/src/app/Resolvers/Billing-Resolver/Not_Charged/not-charged.resolver.ts","./projects/connect/src/app/Services/BillingServices/ChargedService/charged.service.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {BillingComponent} from './billing/billing.component';\nimport {ChargedComponent} from './charged/charged.component';\nimport {NotChargedComponent} from './not-charged/not-charged.component';\nimport {ChargedResolver} from '../../../../Resolvers/Billing-Resolver/Charged/charged.resolver';\nimport {NotChargedResolver} from '../../../../Resolvers/Billing-Resolver/Not_Charged/not-charged.resolver';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BillingComponent,\n    children: [\n      {\n        path: 'charged',\n        component: ChargedComponent,\n        resolve: {\n          ChargedOrders: ChargedResolver,\n        },\n        data: {breadcrumbs: ['Charged Billing Orders']}\n      },\n      {\n        path: 'not-charged',\n        component: NotChargedComponent,\n        resolve: {\n          NotCharged: NotChargedResolver\n        },\n        data: {breadcrumbs: ['Not Charged Billing Orders']}\n      },\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'charged'\n      },\n    ]\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class BillingPagesRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BillingComponent } from './billing/billing.component';\nimport { BillingPagesRoutingModule } from './billing-pages-routing.module';\nimport { AngularMaterialModule } from 'shared/shared-modules/angular-material.module';\nimport { ChargedComponent } from './charged/charged.component';\nimport { NotChargedComponent } from './not-charged/not-charged.component';\nimport { SharedComponentsModule } from 'shared/shared-components/shared-components.module';\nimport { ChargedResolver } from 'projects/connect/src/app/Resolvers/Billing-Resolver/Charged/charged.resolver';\nimport { NotChargedResolver } from 'projects/connect/src/app/Resolvers/Billing-Resolver/Not_Charged/not-charged.resolver';\nimport { PrintReceiptResolver } from 'projects/connect/src/app/Resolvers/Billing-Resolver/PrintReceipt/print-receipt.resolver';\n\n\n\n@NgModule({\n\tdeclarations: [\n\t\tBillingComponent,\n\t\tChargedComponent,\n\t\tNotChargedComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tBillingPagesRoutingModule,\n\t\tAngularMaterialModule,\n\t\tSharedComponentsModule\n\t],\n\tproviders: [\n\t\tChargedResolver,\n\t\tNotChargedResolver,\n\t]\n})\nexport class BillingPagesModule { }\n","/**\n * Copyright (c) 3ddx\n *\n * @summary billing page\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-11-2\n */\nimport {Component, OnInit} from '@angular/core';\nimport {ThemePalette} from '@angular/material/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CStaticIds} from '../../../../../../../../../shared/shared-static-id/shared-static-id';\nimport {OrderListService} from '../../../../../Services/OrderServices/OrderListService/order-list.service';\n\n@Component({\n  selector: 'app-billing',\n  templateUrl: './billing.component.html',\n  styleUrls: ['./billing.component.css']\n})\nexport class BillingComponent implements OnInit {\n  links = [\n    {\n      label: 'Charged',\n      path: 'charged'\n    },\n    {\n      label: 'Not Charged',\n      path: 'not-charged'\n    }\n  ];\n  activeLink = this.links[0];\n  background: ThemePalette = undefined;\n  htmlID = CStaticIds;\n  /**\n   * The Requirements For The Construction Of The Component\n   * @param router For The routing\n   * @param orderListService\n   */\n  constructor(private router: Router,  private orderListService: OrderListService) {\n  }\n  /**\n   * onInit check activate link\n   * @return void\n   */\n  ngOnInit(): void {\n    this.checkActivateLink();\n    this.orderListService.clearSearchData();\n  }\n  /**\n   * checking activate link\n   * @return void\n   */\n  checkActivateLink(): void {\n    if (this.router.url.split('billing-page/')[1] === this.links[0].path) {\n      this.activeLink = this.links[0];\n    } else if (this.router.url.split('billing-page/')[1] === this.links[1].path) {\n      this.activeLink = this.links[1];\n    }\n  }\n\n}\n","<mat-card class=\"mt-3\">\n  <nav mat-tab-nav-bar [backgroundColor]=\"background\">\n    <a mat-tab-link *ngFor=\"let link of links; let i = index\" (click)=\"activeLink = link\" [active]=\"activeLink == link\"\n       [id]=\"htmlID.AnchorTags + 'billing' + i\"\n       [routerLink]=\"link.path\"> {{link.label}}\n    </a>\n  </nav>\n</mat-card>\n<br>\n<router-outlet></router-outlet>\n","/**\n * Copyright (c) 3ddx\n *\n * @summary view charged orders component\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-11-2\n */\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ResponseCodeEnum } from '../../../../../../../../../shared/shared-enums/ResponseCodeEnum';\nimport { Billing } from '../../../../../../../../../shared/shared-interfaces/billing';\nimport { handleOrdersBilling } from '../../../../../../../../../shared/shared-functions/HandleOrdersBilling';\nimport { Subscription } from 'rxjs';\nimport { ChargedService } from 'projects/connect/src/app/Services/BillingServices/ChargedService/charged.service';\nimport { IChargedGet } from 'projects/connect/src/app/Models/Interfaces/Billing/Charged/Charged';\nimport { ServiceNameEnum } from 'shared/shared-enums/ServiceNameEnum';\nimport {\n  ChargedTableComponent\n} from './../../../../../../../../../shared/shared-components/shared-tables/charged-table/charged-table.component';\nimport { CStaticIds } from '../../../../../../../../../shared/shared-static-id/shared-static-id';\nimport {DateService} from '../../../../../../../../../shared/shared-services/date.service';\n\n@Component({\n  selector: 'app-charged',\n  templateUrl: './charged.component.html',\n  styleUrls: ['./charged.component.css']\n})\nexport class ChargedComponent implements OnInit, OnDestroy {\n  billing: Billing[] = [];\n  billingData: any[] = [];\n  subscription!: Subscription;\n  service!: IChargedGet;\n  pageNumber: number = 0;\n  pageSize: number = 15;\n  @ViewChild(ChargedTableComponent) comp!: ChargedTableComponent;\n  billingLength!: number;\n  htmlID = CStaticIds;\n  /**\n   * The Requirements For The Construction Of The Component\n   * @param route For using ActivatedRoute\n   * @param chargedService for getting charged orders\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private chargedService: ChargedService,\n    private dateService: DateService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getCharged();\n  }\n\n  /**\n   * get charged orders\n   * @return void\n   */\n  getCharged(): void {\n    this.subscription = this.route.data.subscribe(res => {\n      if (res.ChargedOrders.responsCode === ResponseCodeEnum.OK) {\n        this.billingLength = res.ChargedOrders.reponses[0].data[0].billing.length;\n        if (this.billingLength) {\n          this.billing = res.ChargedOrders.reponses[0].data[0].billing;\n          this.billing = handleOrdersBilling(this.billing);\n          this.getChargedData(this.billing);\n        };\n      };\n    });\n  };\n  /**\n   * get charged orders billing data\n   * @param response charged order\n   * @return void\n   */\n  getChargedData(response: Billing[]): void {\n    this.billingData = [];\n    if (response.length > 0) {\n      for (let i = 0; i < response.length; i++) {\n        this.billing = response.filter((res: any, index: number) => {\n          if (res.chargedTime === response[i].chargedTime) {\n            i = index;\n            return res.chargedTime;\n          }\n        });\n\n        this.billingData.push({\n          billing: this.billing,\n          chargeOn: this.billing[0]?.chargedTime,\n          totalCost: this.billing[0]?.totalCost\n        });\n      }\n    }\n    this.billingData.forEach((res, index) => {\n      let arr = res.billing.map((response: any) => response.subOrderCost);\n      let totalCost = arr.reduce((a: number, b: number) => a + b);\n      this.billingData[index].totalCost = totalCost;\n    });\n    this.chargedService.chargedOBJ.services = [] as IChargedGet[];\n  }\n  /**\n   * page pagination\n   * @param type next page or prev page\n   * @return void\n   */\n  pagination(type: string): void {\n    if (type === 'prev' && this.pageNumber > 0) {\n      this.pageNumber -= 1;\n    } else if (type === 'next') {\n      this.pageNumber += 1;\n    }\n    this.comp.scrollTop();\n    this.chargedService.service = {\n      ConditionsAnded: false,\n      charged: true,\n      columns: [],\n      pageNumber: this.pageNumber,\n      pageSize: this.pageSize,\n      serviceName: ServiceNameEnum.CONNECT_BILLING,\n    };\n    this.subscription = this.chargedService.getChargedBillings().subscribe(res => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        this.billingLength = res.reponses[0].data[0].billing.length;\n        if (this.billingLength) {\n          this.billing = res.reponses[0].data[0].billing;\n          this.billing = handleOrdersBilling(this.billing);\n          this.getChargedData(this.billing);\n        }\n      }\n    });\n    this.chargedService.service.pageNumber = 0;\n  }\n  /**\n   * unsubscribe on destroy\n   * @return void\n   */\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.billingData = [];\n  }\n}\n","<mat-card class=\"animate__animated animate__fadeIn\" *ngIf=\"billingData.length > 0\">\n  <app-charged-table [billing]=\"billingData\"></app-charged-table>\n</mat-card>\n<mat-card style=\"margin-bottom:90px;\" class=\"mt-5 mx-5\" *ngIf=\"billingData.length > 0\">\n  <div class=\"row \">\n    <div class=\"col-6\">\n      <button class=\"main-color-btn \" *ngIf=\"pageNumber\" (click)=\"pagination('prev')\" mat-button\n              [id]=\"htmlID.Button + 'prev'\">Previous\n      </button>\n    </div>\n    <div class=\"col-6\">\n      <button class=\"main-color-btn float-end\" *ngIf=\"billingLength === 15\" (click)=\"pagination('next')\" mat-button\n              [id]=\"htmlID.Button + 'next'\">Next\n      </button>\n    </div>\n  </div>\n</mat-card>\n<app-error-message-card [errorMessage]=\"'No Charged Orders'\" *ngIf=\"billingData.length === 0\"></app-error-message-card>\n","/**\n * Copyright (c) 3ddx\n *\n * @summary view not charged component\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-11-2\n */\nimport {Component, OnInit, OnDestroy, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute} from '@angular/router';\nimport {IChargedGet} from 'projects/connect/src/app/Models/Interfaces/Billing/Charged/Charged';\nimport {IMain} from 'projects/connect/src/app/Models/Interfaces/Main/Main';\nimport {Subscription} from 'rxjs';\nimport {ResponseCodeEnum} from 'shared/shared-enums/ResponseCodeEnum';\nimport {Billing} from 'shared/shared-interfaces/billing';\nimport {ChargedService} from 'projects/connect/src/app/Services/BillingServices/ChargedService/charged.service';\nimport {handleOrdersBilling} from 'shared/shared-functions/HandleOrdersBilling';\nimport {ServiceNameEnum} from 'shared/shared-enums/ServiceNameEnum';\nimport {NotChargedTableComponent} from 'shared/shared-components/shared-tables/not-charged-table/not-charged-table.component';\nimport {CStaticIds} from '../../../../../../../../../shared/shared-static-id/shared-static-id';\n\n@Component({\n  selector: 'app-not-charged',\n  templateUrl: './not-charged.component.html',\n  styleUrls: ['./not-charged.component.css']\n})\nexport class NotChargedComponent implements OnInit, OnDestroy {\n  notCharged!: Billing[];\n  subscription!: Subscription;\n  pageNumber: number = 0;\n  pageSize: number = 15;\n  billingLength!: number;\n  htmlID = CStaticIds;\n\n  @ViewChild(NotChargedTableComponent) comp!: NotChargedTableComponent;\n\n  constructor(\n    public dialog: MatDialog,\n    private route: ActivatedRoute,\n    private chargedService: ChargedService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getNotCharged();\n  }\n  /**\n   * get not charged orders\n   * @return void\n   */\n  getNotCharged(): void {\n    this.subscription = this.route.data.subscribe(notCharged => {\n      if (notCharged.NotCharged.responsCode === ResponseCodeEnum.OK) {\n        this.billingLength = notCharged.NotCharged.reponses[0].data[0].billing.length;\n        if (this.billingLength) {\n          this.notCharged = notCharged.NotCharged.reponses[0].data[0].billing;\n          this.notCharged = handleOrdersBilling(this.notCharged);\n          this.chargedService.chargedOBJ.services = [] as IChargedGet[];\n        }\n      }\n    });\n  }\n  /**\n   * page pagination\n   * @param type next page or prev page\n   * @return void\n   */\n  pagination(type: string): void {\n    if (type === 'prev' && this.pageNumber > 0) {\n      this.pageNumber -= 1;\n    } else if (type === 'next') {\n      this.pageNumber += 1;\n    }\n    this.comp.scrollTop();\n    this.chargedService.service = {\n      ConditionsAnded: false,\n      charged: true,\n      columns: [],\n      pageNumber: this.pageNumber,\n      pageSize: this.pageSize,\n      serviceName: ServiceNameEnum.CONNECT_BILLING,\n    };\n    this.subscription = this.chargedService.getNotChargedBillings().subscribe(notCharged => {\n      if (notCharged?.responsCode === ResponseCodeEnum.OK) {\n        this.billingLength = notCharged.reponses[0].data[0].billing.length;\n        if (this.billingLength) {\n          this.notCharged = notCharged.reponses[0].data[0].billing;\n          this.notCharged = handleOrdersBilling(this.notCharged);\n          this.chargedService.chargedOBJ.services = [] as IChargedGet[];          \n        }\n      }\n    });\n  }\n  /**\n   * unsubscribe on destroy\n   * @return void\n   */\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<mat-card class=\"animate__animated animate__fadeIn\" *ngIf=\"notCharged.length > 0\">\n  <app-not-charged-table [notChargedBilling]=\"notCharged\"></app-not-charged-table>\n</mat-card>\n<mat-card style=\"margin-bottom:90px;\" class=\"mt-5 mx-5\" *ngIf=\"notCharged.length > 0\">\n  <div class=\"row \">\n    <div class=\"col-6\">\n      <button class=\"main-color-btn \" *ngIf=\"pageNumber\" (click)=\"pagination('prev')\" mat-button\n              [id]=\"htmlID.Button + 'prev'\">Previous\n      </button>\n    </div>\n    <div class=\"col-6\">\n      <button class=\"main-color-btn float-end\" *ngIf=\"billingLength === 15\" (click)=\"pagination('next')\" mat-button\n              [id]=\"htmlID.Button + 'next'\">Next\n      </button>\n    </div>\n  </div>\n</mat-card>\n<app-error-message-card [errorMessage]=\"'No Not Charged Orders'\"\n                        *ngIf=\"notCharged.length === 0\"></app-error-message-card>\n","/**\n * Copyright (c) 3ddx\n *\n * @summary charged orders resolver\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-8\n */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { ChargedService } from '../../../Services/BillingServices/ChargedService/charged.service';\nimport { IMainResponse } from '../../../Models/Interfaces/Main/MainResponse';\n\n@Injectable()\nexport class ChargedResolver implements Resolve<IMainResponse> {\n  /**\n   * The Requirements For The Construction Of The resolver\n   * @param chargedService for ChargedService\n   */\n  constructor(private chargedService: ChargedService) {\n  }\n  /**\n   * get charged billings\n   * @return Observable<IMainResponse>\n   */\n  resolve(): Observable<IMainResponse> {\n    return this.chargedService.getChargedBillings();\n  }\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary not-charged orders resolver\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-8\n */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { ChargedService } from '../../../Services/BillingServices/ChargedService/charged.service';\nimport { IMainResponse } from '../../../Models/Interfaces/Main/MainResponse';\n\n@Injectable()\nexport class NotChargedResolver implements Resolve<IMainResponse> {\n  /**\n   * The Requirements For The Construction Of The resolver\n   * @param chargedService for ChargedService\n   */\n    constructor(private chargedService: ChargedService) {\n    }\n  /**\n   * get not-charged billings\n   * @return Observable<IMainResponse>\n   */\n    resolve(): Observable<IMainResponse> {\n        return this.chargedService.getNotChargedBillings();\n    }\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary get charged and not charged orders service\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-7\n */\nimport { Injectable } from '@angular/core';\nimport { IChargedGet } from '../../../Models/Interfaces/Billing/Charged/Charged';\nimport { IMain } from '../../../Models/Interfaces/Main/Main';\nimport { DataService } from '../../DataService/data.service';\nimport { Observable } from 'rxjs';\nimport { APIName } from '../../../../../../../shared/API/APIName';\nimport { ERequestTypes } from '../../../Models/Enums/RequestTypes/RequestTypes';\nimport { ServiceNameEnum } from '../../../../../../../shared/shared-enums/ServiceNameEnum';\nimport { IMainResponse } from '../../../Models/Interfaces/Main/MainResponse';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ChargedService {\n\tchargedOBJ = { services: [] as IChargedGet[] } as IMain;\n\tservice!: IChargedGet;\n  /**\n   * The Requirements For The Construction Of The service\n   * @param dataService for managing Http methods\n   */\n\tconstructor(private dataService: DataService) {\n\t\tthis.chargedOBJ.requestType = ERequestTypes.VIEW;\n\t\tthis.service = {\n\t\t\tConditionsAnded: false,\n\t\t\tcharged: true,\n\t\t\tcolumns: [],\n\t\t\tpageNumber: 0,\n\t\t\tpageSize: 15,\n\t\t\tserviceName: ServiceNameEnum.CONNECT_BILLING,\n\t\t} as IChargedGet;\n\t}\n  /**\n   * get charged billings\n   * @return Observable<IMainResponse>\n   */\n\tgetChargedBillings(): Observable<IMainResponse> {\n\t\tthis.service.charged = true;\n\t\tthis.chargedOBJ.services.push(this.service);\n\t\treturn this.dataService.post(APIName.ORDERS, this.chargedOBJ);\n\t}\n  /**\n   * get not-charged billings\n   * @return Observable<IMainResponse>\n   */\n\tgetNotChargedBillings(): Observable<IMainResponse> {\n\t\tthis.service.charged = false;\n\t\tthis.chargedOBJ.services.push(this.service);\n\t\treturn this.dataService.post(APIName.ORDERS, this.chargedOBJ);\n\t}\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}