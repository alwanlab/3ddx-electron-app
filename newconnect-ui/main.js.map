{"version":3,"file":"main.js","mappings":"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","sources":["./projects/connect/src/app/Interceptors/APis.interceptor.ts","./projects/connect/src/app/Models/Enums/RequestTypes/RequestTypes.ts","./projects/connect/src/app/Services/AuthServices/LoginService/login.service.ts","./projects/connect/src/app/Services/DataService/data.service.ts","./projects/connect/src/app/Services/OrderServices/OrderListService/order-list.service.ts","./projects/connect/src/app/Services/UploadService/upload.service.ts","./projects/connect/src/app/Widgets/Components/progress/progress.component.ts","./projects/connect/src/app/Widgets/Components/progress/progress.component.html","./projects/connect/src/app/Widgets/widgets.module.ts","./projects/connect/src/app/app-routing.module.ts","./projects/connect/src/app/app.component.ts","./projects/connect/src/app/app.component.html","./projects/connect/src/app/app.module.ts","./projects/connect/src/environments/environment.ts","./projects/connect/src/main.ts","./shared/API/APIName.ts","./shared/shared-enums/ResponseCodeEnum.ts","./shared/shared-enums/ServiceNameEnum.ts","./shared/shared-guards/auth-guard/auth.guard.ts","./shared/shared-interceptors/error-interceptor/error.interceptor.ts","./shared/shared-interceptors/index.ts","./shared/shared-interceptors/loader-interceptor/loader.interceptor.ts","./shared/shared-modules/angular-material.module.ts","./shared/shared-services/lang.service.ts","./shared/shared-services/loader.service.ts","./shared/shared-services/toastr.service.ts","./shared/shared-static-data/SubOrderType.ts","./shared/shared-static-id/shared-static-id.ts","./projects/connect/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {IMain} from '../Models/Interfaces/Main/Main';\nimport {APIName} from '../../../../../shared/API/APIName';\n\n\n@Injectable()\nexport class APIsInterceptor implements HttpInterceptor {\n  constructor() {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!req.url.includes('.json') && !req.url.includes(APIName.uploadFile) && !req.url.includes(APIName.createNewPassword) && !req.url.includes('/assets/banner.properties')) {\n      const data = this.prepareAPIRequest(req.body);\n      req = req.clone({body: data});\n    }\n    else if (req.url.includes(APIName.createNewPassword)){\n      const newPassToken = localStorage.getItem('passChangeToken');\n      if (newPassToken){\n        req = req.clone({headers: req.headers.set('passchangetoken', newPassToken)});\n      }\n    }\n    return next.handle(req);\n  }\n\n  prepareAPIRequest(body: any): IMain {\n    return {\n      internalUser: false,\n      loginToken: localStorage.getItem('token') ?? '',\n      requestType: body.requestType,\n      userId: Number(localStorage.getItem('userCNId')) ? Number(localStorage.getItem('userCNId')) : -1,\n      services: body.services\n    };\n  }\n}\n\n\n","export enum ERequestTypes {\n  ADD = 'ADD',\n  VIEW = 'VIEW',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n  GET_ORDER_NUMBER = 'GET_ORDER_NUMBER'\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary log in and log out service\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-8\n */\nimport { Injectable } from '@angular/core';\nimport { ILogin } from '../../../Models/Interfaces/Auth/Login';\nimport { DataService } from '../../DataService/data.service';\nimport { Observable } from 'rxjs';\nimport { APIName } from '../../../../../../../shared/API/APIName';\nimport { IMainResponse } from '../../../Models/Interfaces/Main/MainResponse';\nimport { IApiData } from '../../../Models/Interfaces/APIs/apiData.model';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  /**\n   * The Requirements For The Construction Of The service\n   * @param dataService for managing Http methods\n   * @param router for routing\n   */\n  constructor(private dataService: DataService, public router: Router) {\n  }\n  /**\n   * log in\n   * @param loginObj logIn object\n   * @return Observable<IMainResponse>\n   */\n  login(loginObj: IApiData<ILogin>): Observable<IMainResponse> {\n    return this.dataService.post(APIName.login, loginObj);\n  }\n  /**\n   * log out\n   * @return void\n   */\n  logout(): void {\n    this.router.navigate(['auth', 'sign-in']);\n    const myLanguage = localStorage.getItem('language') || '';\n    localStorage.clear();\n    localStorage.setItem('language', myLanguage);\n  }\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary data service for managing http methods\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-21\n */\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  /**\n   * The Requirements For The Construction Of The service\n   * @param httpClient for performing http requests\n   */\n  constructor(public httpClient: HttpClient) {\n  }\n\n\n  /**\n   * post method\n   * @param APIPath\n   * @param OBJ posted object\n   * @return any\n   */\n  // tslint:disable-next-line:typedef\n  post(APIPath: string, OBJ: any) {\n    return this.httpClient.post<any>(`${environment.cpRootURL}${APIPath}`, OBJ, { withCredentials: true });\n  }\n\n  // tslint:disable-next-line:typedef\n  postDownload(APIPath: string, OBJ: any) {\n    return this.httpClient.post(`${environment.cpRootURL}${APIPath}`, OBJ, { observe: 'response', responseType: 'blob', withCredentials: true });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IApiData } from '../../../Models/Interfaces/APIs/apiData.model';\nimport { IOrderList } from '../../../Models/Interfaces/Order/OrderList/OrderList';\nimport { ERequestTypes } from '../../../Models/Enums/RequestTypes/RequestTypes';\nimport { DataService } from '../../DataService/data.service';\nimport { ServiceNameEnum } from '../../../../../../../shared/shared-enums/ServiceNameEnum';\nimport { APIName } from '../../../../../../../shared/API/APIName';\nimport { Observable } from 'rxjs';\nimport { IMainResponse } from '../../../Models/Interfaces/Main/MainResponse';\nimport { ISendToFriend } from '../../../Models/Interfaces/Order/OrderList/SendToFrind';\nimport { IOrderByIdReq } from '../../../Models/Interfaces/Order/OrderById/OrderByIdReq';\nimport { IAdvancedSearch } from '../../../Models/Interfaces/Order/AdvancedSearch/advanced-search';\nimport { ResponseCodeEnum } from 'shared/shared-enums/ResponseCodeEnum';\nimport { IGfmrDetails } from '../../../Models/Interfaces/Order/GfmrDetails/Gfmr-details';\nimport {Router} from '@angular/router';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderListService {\n  orderListOBJ = { requestType: ERequestTypes.VIEW, services: [] } as IApiData<IOrderList>;\n  orderListPaginationOBJ = { requestType: ERequestTypes.GET_ORDER_NUMBER, services: [] } as IApiData<IOrderList>;\n  orderByIdOBJ = { requestType: ERequestTypes.VIEW, services: [] } as IApiData<IOrderByIdReq>;\n  gfmrByIdOBJ = { requestType: ERequestTypes.VIEW, services: [] } as IApiData<IGfmrDetails>;\n  advancedSearchOBJ = { requestType: ERequestTypes.VIEW, services: [] } as IApiData<IAdvancedSearch>;\n  searchObj = { requestType: ERequestTypes.VIEW, services: [] } as IApiData<IAdvancedSearch>; patients: any;\n  searchValue!: string;\n  pageNumber = 0;\n  pageSize: number = 21;\n  orderList: any[] = [];\n  pageOffset = 0;\n  showShorMoreBtn: boolean = true;\n  firstOrders = 0;\n  patientName!: string;\n  showMore!: boolean;\n  viewOrders = false;\n  filter = false;\n  getAllOrders = true;\n  searchPatient = false;\n  searchData: any;\n  layOut = 'grid';\n  clearSearch!: boolean;\n  showOrderDetails = false;\n  ordersCount: any = 0;\n  filteredPageNumber = 0;\n  searchResult: any;\n  uploadingId = new Set();\n  /**\n   * The Requirements For The Construction Of The service\n   * @param dataService for managing Http methods\n   * @param router for routing\n   */\n  constructor(private dataService: DataService , private router: Router) {\n  }\n  /**\n   * get order list\n   * @return Observable<IMainResponse>\n   */\n  getOrderList(): Observable<IMainResponse> {\n    this.orderListOBJ.services[0] = {\n      serviceName: ServiceNameEnum.VIEW_ORDER_ALL,\n      ordersOwnerId: Number(localStorage.getItem('userCNId')),\n      pageNumber: this.pageNumber,\n      pageSize: this.pageSize,\n      sortedByColumnsIndices: [0],\n      has: false,\n      columns: [\n        'orderId',\n        'guideSupportEnumId',\n        'guideSupport',\n        'miscID',\n        'typeTxtMisc',\n        'typeMisc',\n        'CostMisc',\n        'orderEntityCostMisc',\n        'timeSentMisc',\n        'statusId',\n        'OrderIdOrtho',\n        'orderCommonId',\n        'StatusIdOrtho',\n        'orderEnum',\n        'patientName',\n        'softwareEnumId',\n        'softwareEnum',\n        'formatEnumId',\n        'formatEnum',\n        'doctorFirstName',\n        'doctorLastName',\n        'scanningCenterFirstName',\n        'scanningCenterLastName',\n        'maxillaEnum',\n        'mandibleEnum',\n        'statusId',\n        'orderEntityCost',\n        'orderEntityCostDiff',\n        'timeSent',\n        'timeEnd',\n        'timeUpdate',\n        'userCNComment',\n        'userCPComment',\n        'timeBilled',\n        'operatorId',\n        'isLaserScan',\n        'implantsSites',\n        'teethExtract',\n        'teethMissed',\n        'currencyEnum',\n        'operatorFirstName',\n        'operatorLastName',\n        'scanningCenterId',\n        'doctorId',\n        'fileName',\n        'xFileName',\n        'serviceProviderId',\n        'trackNumber',\n        'orderEnumId',\n        'hasIntraoralScans',\n        'mandibleSegmentationEnum',\n        'maxillaSegmentationEnum',\n        'clientToBeBilled',\n        'pendingReason',\n        'pendingDescription',\n        'portableFileName',\n        'scansNeeded',\n        'serviceProvider',\n        'canDownload',\n        'commonOrderVoucherHistory',\n        'miscId',\n        'restorationType',\n        'isExpress'\n      ],\n      ConditionsAnded: false\n    };\n    return this.dataService.post(APIName.orderList.list, this.orderListOBJ);\n  }\n\n\n  /**\n   * get order list pagination orders\n   * @return Observable<IMainResponse>\n   */\n  getOrderListPagination(): Observable<IMainResponse> {\n    if (!this.filter && !this.searchPatient) {\n      this.orderListPaginationOBJ.services[0] = {\n        serviceName: ServiceNameEnum.VIEW_ORDER_ALL,\n        ordersOwnerId: Number(localStorage.getItem('userCNId')),\n        pageNumber: 0,\n        pageSize: 0,\n        sortedByColumnsIndices: [0],\n        has: false,\n        columns: [\n          'orderId',\n          'guideSupportEnumId',\n          'guideSupport',\n          'miscID',\n          'typeTxtMisc',\n          'typeMisc',\n          'CostMisc',\n          'orderEntityCostMisc',\n          'timeSentMisc',\n          'statusId',\n          'OrderIdOrtho',\n          'orderCommonId',\n          'StatusIdOrtho',\n          'orderEnum',\n          'patientName',\n          'softwareEnumId',\n          'softwareEnum',\n          'formatEnumId',\n          'formatEnum',\n          'doctorFirstName',\n          'doctorLastName',\n          'scanningCenterFirstName',\n          'scanningCenterLastName',\n          'maxillaEnum',\n          'mandibleEnum',\n          'statusId',\n          'orderEntityCost',\n          'orderEntityCostDiff',\n          'timeSent',\n          'timeEnd',\n          'timeUpdate',\n          'userCNComment',\n          'userCPComment',\n          'timeBilled',\n          'operatorId',\n          'isLaserScan',\n          'implantsSites',\n          'teethExtract',\n          'teethMissed',\n          'currencyEnum',\n          'operatorFirstName',\n          'operatorLastName',\n          'scanningCenterId',\n          'doctorId',\n          'fileName',\n          'xFileName',\n          'serviceProviderId',\n          'trackNumber',\n          'orderEnumId',\n          'hasIntraoralScans',\n          'mandibleSegmentationEnum',\n          'maxillaSegmentationEnum',\n          'clientToBeBilled',\n          'pendingReason',\n          'pendingDescription',\n          'portableFileName',\n          'scansNeeded',\n          'serviceProvider',\n          'canDownload',\n          'commonOrderVoucherHistory',\n          'miscId',\n          'restorationType',\n          'isExpress'\n        ],\n        ConditionsAnded: false\n      };\n    }\n    else {\n      if (this.filter) {\n        this.orderListPaginationOBJ.services[0] = {...this.advancedSearchOBJ.services[0]};\n      } else if (this.searchPatient) {\n        this.orderListPaginationOBJ.services[0] = {...this.searchObj.services[0]};\n      }\n      this.orderListPaginationOBJ.services[0].pageSize = 0;\n      this.orderListPaginationOBJ.services[0].pageNumber = 0;\n    }\n\n\n    return this.dataService.post(APIName.orderList.list, this.orderListPaginationOBJ);\n  }\n  /**\n   * get patients names\n   * @return Observable<IMainResponse>\n   */\n\n  getPatientName(): Observable<IMainResponse> {\n    this.orderListOBJ.services[0] = {\n      serviceName: ServiceNameEnum.VIEW_ALL_PATIENTS,\n      ordersOwnerId: Number(localStorage.getItem('userCNId')),\n      pageNumber: 0,\n      pageSize: 0,\n      sortedByColumnsIndices: [0],\n      has: false,\n      columns: [],\n      ConditionsAnded: false\n    };\n    return this.dataService.post(APIName.orderList.list, this.orderListOBJ);\n  }\n\n  /**\n   * reload order list\n   * @return void\n   */\n  onReload(): void {\n    this.getAllOrders = true;\n    this.filter = false;\n    this.searchPatient = false;\n    this.orderListOBJ.services[0] = {\n      serviceName: ServiceNameEnum.VIEW_ORDER_ALL,\n      ordersOwnerId: Number(localStorage.getItem('userCNId')),\n      pageNumber: 0,\n      pageSize: 21,\n      sortedByColumnsIndices: [0],\n      has: false,\n      columns: [\n        'orderId',\n        'guideSupportEnumId',\n        'guideSupport',\n        'miscID',\n        'typeTxtMisc',\n        'typeMisc',\n        'CostMisc',\n        'orderEntityCostMisc',\n        'timeSentMisc',\n        'statusId',\n        'OrderIdOrtho',\n        'orderCommonId',\n        'StatusIdOrtho',\n        'orderEnum',\n        'patientName',\n        'softwareEnumId',\n        'softwareEnum',\n        'formatEnumId',\n        'formatEnum',\n        'doctorFirstName',\n        'doctorLastName',\n        'scanningCenterFirstName',\n        'scanningCenterLastName',\n        'maxillaEnum',\n        'mandibleEnum',\n        'statusId',\n        'orderEntityCost',\n        'orderEntityCostDiff',\n        'timeSent',\n        'timeEnd',\n        'timeUpdate',\n        'userCNComment',\n        'userCPComment',\n        'timeBilled',\n        'operatorId',\n        'isLaserScan',\n        'implantsSites',\n        'teethExtract',\n        'teethMissed',\n        'currencyEnum',\n        'operatorFirstName',\n        'operatorLastName',\n        'scanningCenterId',\n        'doctorId',\n        'fileName',\n        'xFileName',\n        'serviceProviderId',\n        'trackNumber',\n        'orderEnumId',\n        'hasIntraoralScans',\n        'mandibleSegmentationEnum',\n        'maxillaSegmentationEnum',\n        'clientToBeBilled',\n        'pendingReason',\n        'pendingDescription',\n        'portableFileName',\n        'scansNeeded',\n        'serviceProvider',\n        'canDownload',\n        'commonOrderVoucherHistory',\n        'miscId',\n        'restorationType',\n        'isExpress'\n      ],\n      ConditionsAnded: false\n    };\n    this.dataService.post(APIName.orderList.list, this.orderListOBJ).subscribe(res => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        this.orderList = res.data.VIEW_ORDER_ALL;\n      }\n    });\n  }\n\n\n  /**\n   * get order by id\n   * @param id order id\n   * @return Observable<IMainResponse>\n   */\n  getOrderById(id: number): Observable<IMainResponse> {\n    this.orderByIdOBJ.services[0] = {\n      serviceName: ServiceNameEnum.VIEW_ORDER_ALL,\n      has: false,\n      columns: [\n        'orderId',\n        'guideSupportEnumId',\n        'guideSupport',\n        'miscID',\n        'typeTxtMisc',\n        'typeMisc',\n        'CostMisc',\n        'orderEntityCostMisc',\n        'timeSentMisc',\n        'statusId',\n        'OrderIdOrtho',\n        'orderCommonId',\n        'StatusIdOrtho',\n        'orderEnum',\n        'patientName',\n        'softwareEnumId',\n        'softwareEnum',\n        'formatEnumId',\n        'formatEnum',\n        'doctorFirstName',\n        'doctorLastName',\n        'scanningCenterFirstName',\n        'scanningCenterLastName',\n        'maxillaEnum',\n        'mandibleEnum',\n        'statusId',\n        'orderEntityCost',\n        'orderEntityCostDiff',\n        'timeSent',\n        'timeEnd',\n        'timeUpdate',\n        'userCNComment',\n        'userCPComment',\n        'timeBilled',\n        'operatorId',\n        'isLaserScan',\n        'implantsSites',\n        'teethExtract',\n        'teethMissed',\n        'currencyEnum',\n        'operatorFirstName',\n        'operatorLastName',\n        'scanningCenterId',\n        'doctorId',\n        'fileName',\n        'xFileName',\n        'serviceProviderId',\n        'trackNumber',\n        'orderEnumId',\n        'hasIntraoralScans',\n        'mandibleSegmentationEnum',\n        'maxillaSegmentationEnum',\n        'clientToBeBilled',\n        'pendingReason',\n        'pendingDescription',\n        'portableFileName',\n        'scansNeeded',\n        'serviceProvider',\n        'canDownload',\n        'commonOrderVoucherHistory',\n        'miscId',\n        'restorationType',\n        'isExpress'\n      ],\n      ConditionsAnded: true,\n      ordersOwnerId: Number(localStorage.getItem('userCNId')),\n      pageNumber: -1,\n      pageSize: -1,\n      sortedByColumnsIndices: [0],\n      condition: {\n        argumentName: 'orderId',\n        argumentValue: id.toString(),\n        argumentValueEnd: null,\n        firstCondtion: null,\n        like: false,\n        not: false,\n        inBetween: false,\n        secondCondtion: null\n      }\n    };\n    return this.dataService.post(APIName.orderList.sendToFriends, this.orderByIdOBJ);\n  }\n\n  /**\n   * send order to friend\n   * @param order sent order\n   * @return Observable<IMainResponse>\n   */\n  sendOrderToFriend(order: IApiData<ISendToFriend>): Observable<IMainResponse> {\n    return this.dataService.post(APIName.orderList.sendToFriends, order);\n  }\n\n  /**\n   * advanced search\n   * @param advancedSearchOBJ search object\n   * @return Observable<IMainResponse>\n   */\n  advancedSearch(advancedSearchOBJ: IApiData<IAdvancedSearch>): Observable<IMainResponse> {\n    return this.dataService.post(APIName.orderList.advancedSearch, advancedSearchOBJ);\n  }\n  /**\n   * get gfmr order data\n   * @param id order's id\n   * @return Observable<IMainResponse>\n   */\n  getGfmrData(id: number): Observable<IMainResponse> {\n    this.gfmrByIdOBJ.services[0] = {\n      serviceName: ServiceNameEnum.VIEW_ORDER_RESTORATION_GFMR,\n      orderID: id,\n      columns: [],\n      ConditionsAnded: false\n    };\n    return this.dataService.post(APIName.orderList.getGFMRorderDetails, this.gfmrByIdOBJ);\n  }\n  /**\n   * filter orders\n   * @param event filter obj\n   * @return Observable<IMainResponse>\n   */\n  onFilterOrder(event: { dateEnd: any, dateStart: any, orderType: number, scanningCenter: string, patientName: string, doctorName: string }): Observable<IMainResponse> {\n    this.searchData = event;\n    this.getAllOrders = false;\n    this.filter = true;\n    this.searchPatient = false;\n    if (event.dateStart === 'NaN') {\n      event.dateStart = null;\n    }\n    if (event.dateEnd === 'NaN') {\n      event.dateEnd = null;\n    }\n    this.advancedSearchOBJ.services[0] = {\n      ConditionsAnded: true,\n      asc: false,\n      has: false,\n      ordersOwnerId: Number(localStorage.getItem('userCNId')),\n      pageNumber: this.pageNumber,\n      pageSize: this.pageSize,\n      serviceName: ServiceNameEnum.ADVANCED_SEARCH,\n      sortedByColumnsIndices: [0],\n      columns: [\n        'orderId',\n        'guideSupportEnumId',\n        'guideSupport',\n        'miscID',\n        'typeTxtMisc',\n        'typeMisc',\n        'CostMisc',\n        'orderEntityCostMisc',\n        'timeSentMisc',\n        'statusId',\n        'OrderIdOrtho',\n        'orderCommonId',\n        'StatusIdOrtho',\n        'orderEnum',\n        'patientName',\n        'softwareEnumId',\n        'softwareEnum',\n        'formatEnumId',\n        'formatEnum',\n        'doctorFirstName',\n        'doctorLastName',\n        'scanningCenterFirstName',\n        'scanningCenterLastName',\n        'maxillaEnum',\n        'mandibleEnum',\n        'statusId',\n        'orderEntityCost',\n        'orderEntityCostDiff',\n        'timeSent',\n        'timeEnd',\n        'timeUpdate',\n        'userCNComment',\n        'userCPComment',\n        'timeBilled',\n        'operatorId',\n        'isLaserScan',\n        'implantsSites',\n        'teethExtract',\n        'teethMissed',\n        'currencyEnum',\n        'operatorFirstName',\n        'operatorLastName',\n        'scanningCenterId',\n        'doctorId',\n        'fileName',\n        'xFileName',\n        'serviceProviderId',\n        'trackNumber',\n        'orderEnumId',\n        'hasIntraoralScans',\n        'mandibleSegmentationEnum',\n        'maxillaSegmentationEnum',\n        'clientToBeBilled',\n        'pendingReason',\n        'pendingDescription',\n        'portableFileName',\n        'scansNeeded',\n        'serviceProvider',\n        'canDownload',\n        'commonOrderVoucherHistory',\n        'miscId',\n        'restorationType',\n        'doctorName',\n        'scanningCenterName',\n        'isExpress'\n      ],\n      condition: {\n        anded: true,\n        argumentName: '',\n        argumentValue: '',\n        argumentValueEnd: null,\n        firstCondtion: null,\n        inBetween: false,\n        like: false,\n        not: false,\n        secondCondtion: {\n          anded: true,\n          argumentName: '',\n          argumentValue: '',\n          argumentValueEnd: null,\n          firstCondtion: event.patientName ? {\n            argumentName: 'patientName',\n            argumentValue: event.patientName,\n            argumentValueEnd: null,\n            firstCondtion: null,\n            inBetween: false,\n            like: true,\n            anded: false,\n            not: false,\n          } : null,\n          inBetween: false,\n          like: false,\n          not: false,\n          secondCondtion: {\n            anded: true,\n            argumentName: '',\n            argumentValue: '',\n            argumentValueEnd: null,\n            firstCondtion: event.scanningCenter ? {\n              argumentName: 'scanningCenterName',\n              argumentValue: event.scanningCenter,\n              argumentValueEnd: null,\n              firstCondtion: null,\n              inBetween: false,\n              like: true,\n              anded: false,\n              not: false,\n            } : null,\n            inBetween: false,\n            like: false,\n            not: false,\n            secondCondtion: {\n              anded: true,\n              argumentName: '',\n              argumentValue: '',\n              argumentValueEnd: null,\n              firstCondtion: event.doctorName ? {\n                argumentName: 'doctorName',\n                argumentValue: event.doctorName,\n                argumentValueEnd: null,\n                firstCondtion: null,\n                inBetween: false,\n                like: true,\n                anded: false,\n                not: false,\n              } : null,\n              inBetween: false,\n              like: false,\n              not: false,\n              secondCondtion: {\n                anded: true,\n                argumentName: '',\n                argumentValue: '',\n                argumentValueEnd: null,\n                firstCondtion: event.orderType ? {\n                  argumentName: 'orderEnumId',\n                  argumentValue: String(event.orderType),\n                  argumentValueEnd: null,\n                  firstCondtion: null,\n                  inBetween: false,\n                  like: false,\n                  not: false,\n                  secondCondtion: null,\n                } : null,\n                inBetween: false,\n                like: false,\n                not: false,\n                secondCondtion: (event.dateStart || event.dateEnd) ? {\n                  argumentName: 'timeSent',\n                  argumentValue: event.dateStart,\n                  argumentValueEnd: event.dateEnd,\n                  firstCondtion: null,\n                  inBetween: true,\n                  like: false,\n                  not: false,\n                  secondCondtion: null\n                } : null\n              }\n            }\n          }\n        }\n      }\n    };\n    return this.advancedSearch(this.advancedSearchOBJ);\n  };\n  /**\n   * patient name search\n   * @return Observable<IMainResponse>\n   */\n  patientSearch(): Observable<IMainResponse> {\n    this.patientName = this.patientName ? this.patientName : this.searchValue;\n    this.searchObj.services[0] = {\n      ConditionsAnded: true,\n      asc: false,\n      has: false,\n      ordersOwnerId: Number(localStorage.getItem('userCNId')),\n      pageNumber: this.pageNumber,\n      pageSize: this.pageSize,\n      serviceName: ServiceNameEnum.ADVANCED_SEARCH,\n      sortedByColumnsIndices: [0],\n      columns: [\n        'orderId',\n        'guideSupportEnumId',\n        'guideSupport',\n        'miscID',\n        'typeTxtMisc',\n        'typeMisc',\n        'CostMisc',\n        'orderEntityCostMisc',\n        'timeSentMisc',\n        'statusId',\n        'OrderIdOrtho',\n        'orderCommonId',\n        'StatusIdOrtho',\n        'orderEnum',\n        'patientName',\n        'softwareEnumId',\n        'softwareEnum',\n        'formatEnumId',\n        'formatEnum',\n        'doctorFirstName',\n        'doctorLastName',\n        'scanningCenterFirstName',\n        'scanningCenterLastName',\n        'maxillaEnum',\n        'mandibleEnum',\n        'statusId',\n        'orderEntityCost',\n        'orderEntityCostDiff',\n        'timeSent',\n        'timeEnd',\n        'timeUpdate',\n        'userCNComment',\n        'userCPComment',\n        'timeBilled',\n        'operatorId',\n        'isLaserScan',\n        'implantsSites',\n        'teethExtract',\n        'teethMissed',\n        'currencyEnum',\n        'operatorFirstName',\n        'operatorLastName',\n        'scanningCenterId',\n        'doctorId',\n        'fileName',\n        'xFileName',\n        'serviceProviderId',\n        'trackNumber',\n        'orderEnumId',\n        'hasIntraoralScans',\n        'mandibleSegmentationEnum',\n        'maxillaSegmentationEnum',\n        'clientToBeBilled',\n        'pendingReason',\n        'pendingDescription',\n        'portableFileName',\n        'scansNeeded',\n        'serviceProvider',\n        'canDownload',\n        'commonOrderVoucherHistory',\n        'miscId',\n        'restorationType',\n        'isExpress'\n      ],\n      condition: {\n        anded: true,\n        argumentName: '',\n        argumentValue: '',\n        argumentValueEnd: null,\n        firstCondtion: null,\n        inBetween: false,\n        like: false,\n        not: false,\n        secondCondtion: {\n          anded: true,\n          argumentName: '',\n          argumentValue: '',\n          argumentValueEnd: null,\n          firstCondtion: {\n            argumentName: 'patientName',\n            argumentValue: this.patientName,\n            argumentValueEnd: null,\n            firstCondtion: null,\n            inBetween: false,\n            like: true,\n            anded: false,\n            not: false,\n          },\n          inBetween: false,\n          like: false,\n          not: false,\n        }\n      }\n    };\n\n    return this.advancedSearch(this.searchObj);\n  }\n  /**\n   * get orders for pagination by resolver\n   * @return Observable<IMainResponse>\n   */\n  paginationOrderResolver(): Observable<IMainResponse> | any {\n      if (!this.filter && !this.searchPatient) {\n        this.getAllOrders = true;\n        return this.getOrderList();\n      } else if (this.filter) {\n        this.filter = true;\n        this.searchPatient = false;\n        return this.onFilterOrder(this.searchData);\n      } else if (this.searchPatient) {\n        this.filter = false;\n        this.searchPatient = true;\n        return this.patientSearch();\n      }\n    else {\n      return;\n    }\n  }\n  /**\n   * clear search data\n   * @return void\n   */\n  clearSearchData(): void {\n    this.filter = false;\n    this.searchPatient = false;\n    this.getAllOrders = true;\n    this.patientName = '';\n    this.searchValue = '';\n    this.viewOrders = false;\n    this.showOrderDetails = false;\n    this.layOut = 'grid';\n  }\n  /**\n   * return to first page\n   * @return void\n   */\n  returnToFirstPage(): void{\n    this.pageNumber = 0;\n    this.pageOffset = 0;\n    this.firstOrders = 0;\n    localStorage.setItem('pageNumber', String(this.pageNumber));\n  }\n  /**\n   * reload order list\n   * @return void\n   */\n  reloadOrderList(): void {\n    this.viewOrders = false;\n    this.getOrderList().subscribe(res => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        this.orderList = res.data.VIEW_ORDER_ALL;\n        this.getOrderListPagination().subscribe(res => {\n          if (res.responsCode === ResponseCodeEnum.OK) {\n            this.ordersCount = res.data.VIEW_ORDER_ALL[0].ordersCount;\n            this.viewOrders = true;\n          }\n        });\n      }\n    });\n  }\n  /**\n   * remove upload id\n   * @param orderID order id\n   * @param type order upload type\n   * @return void\n   */\n  removeUploadId(orderID: number, type: string): void {\n    this.uploadingId.forEach((res: any) => {\n      const uploadingFile = JSON.parse(res);\n      if (uploadingFile.id === orderID && uploadingFile.type === type) { this.uploadingId.delete(res); }\n    });\n  }\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary uploading service\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2022-1-5\n */\nimport {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject, Subscription} from 'rxjs';\nimport {HttpClient, HttpParams, HttpRequest} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {APIName} from '../../../../../../shared/API/APIName';\nimport {CaseStatus} from '../../../../../../shared/shared-classes/case-status';\nimport {IUpload} from '../../Models/Interfaces/Upload/upload';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  index: number = -1;\n  uploadData: Subject<IUpload[]> = new Subject();\n  progress: Subject<number> = new Subject();\n  calculatedTime: Subject<any> = new Subject();\n  subScribe: Subject<Subscription> = new Subject();\n  uploadDataNew: any[] = [];\n  /**\n   * The Requirements For The Construction Of The service\n   * @param httpClient for using Http methods\n   */\n  constructor(private httpClient: HttpClient) {\n  }\n  /**\n   * upload files\n   * @param data form data\n   * @param userId user id\n   * @param orderId order id\n   * @param subOrderDetails sub order details\n   * @param fileName file name\n   * @return Observable<any>\n   */\n  onUploadFile(data: FormData, userId: number, orderId: number, subOrderDetails: CaseStatus, fileName: string, OrderId2? : number): Observable<any> {\n\n    let params = new HttpParams();\n    params = params.append('userID', userId);\n    params = params.append('orderID', orderId);\n    const req = new HttpRequest('POST', environment.cpRootURL + APIName.uploadFile, data, {\n      reportProgress: true,\n      responseType: 'json',\n      params\n    });\n\n    this.uploadDataNew.push({\n      userId,\n      orderId,\n      subOrderDetails,\n      fileName,\n      showCancel: true,\n      progress: this.progress,\n      calculatedTime: this.calculatedTime,\n      subScribe: this.subScribe,\n      OrderId2: OrderId2,\n    });\n    return this.httpClient.request(req);\n  }\n  /**\n   * get upload data\n   * @return Observable<IUpload[]>\n   */\n  getUploadData(): Observable<IUpload[]> {\n    return this.uploadData.asObservable();\n  }\n  /**\n   * set upload data\n   * @param uploadData upload data\n   * @return void\n   */\n  setUploadData(uploadData: null | IUpload[]): void {\n    if (uploadData != null) {\n      this.uploadData.next(uploadData);\n    }\n  }\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary uploading progress component\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2022-1-5\n */\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadService } from '../../../Services/UploadService/upload.service';\nimport { Subscription } from 'rxjs';\nimport { ToastrService } from '../../../../../../../shared/shared-services/toastr.service';\nimport { CStaticIds } from '../../../../../../../shared/shared-static-id/shared-static-id';\nimport { OrderListService } from '../../../Services/OrderServices/OrderListService/order-list.service';\nimport { ResponseCodeEnum } from 'shared/shared-enums/ResponseCodeEnum';\nimport {SubOrderType} from '../../../../../../../shared/shared-static-data/SubOrderType';\n\n@Component({\n  selector: 'app-progress',\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.css']\n})\nexport class ProgressComponent implements OnInit {\n  htmlID = CStaticIds;\n  /**\n   * The Requirements For The Construction Of The component\n   * @param dialogRef for dialog reference\n   * @param data for dialog data\n   * @param uploadService for using UploadService\n   * @param toastService for showing requests notification\n   */\n  constructor(\n    public dialogRef: MatDialogRef<ProgressComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public uploadService: UploadService,\n    private toastService: ToastrService,\n    private orderService: OrderListService\n  ) {\n  }\n\n  ngOnInit(): void {\n    // this.uploadService.uploadDataNew.forEach(res => {\n    //   if (res.calculatedTime !== '0 Seconds') {\n    //     this.orderService.getOrderList().subscribe(res => {\n    //       if (res.responsCode === ResponseCodeEnum.OK) {\n    //         this.orderService.orderList = res.data.VIEW_ORDER_ALL;\n    //       }\n    //     })\n    //   }\n    // })\n  }\n  /**\n   * canceling subscribe\n   * @param subscribe for subscription\n   * @param orderID order id\n   * @param file uploaded file subOrderDetails uploadType\n   * @return void\n   */\n  cancelSubScribe(subscribe: Subscription, orderID: number, file: any): void {\n    subscribe.unsubscribe();\n    file.showCancel = !file.showCancel;\n    this.toastService.errorAlert(`Order Id ${orderID} Upload File Canceled`, 'Upload File');\n    this.removeUpload(file.subOrderDetails.uploadType, orderID);\n  }\n  removeUpload(uploadType: string, orderID: number): void{\n    switch (uploadType) {\n      case SubOrderType.GFMR.uploadType:\n        this.orderService.removeUploadId(orderID , SubOrderType.GFMR.uploadType);\n        break;\n      case SubOrderType.CONVERSION.uploadType:\n        this.orderService.removeUploadId(orderID, SubOrderType.CONVERSION.uploadType);\n        break;\n      case SubOrderType.INTRAORAL_SCAN.uploadType:\n        this.orderService.removeUploadId(orderID, SubOrderType.INTRAORAL_SCAN.uploadType);\n        break;\n      case SubOrderType.RESTORATION.uploadType:\n        this.orderService.removeUploadId(orderID, SubOrderType.RESTORATION.uploadType);\n        break;\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <img [src]=\"data.logo\" class=\"logo\" [id]=\"htmlID.Image + 'logo'\">\n      <button mat-mini-fab aria-label=\"Example icon button with a home icon\" [id]=\"htmlID.Button + 'close'\"\n        class=\"bg-danger float-end\" (click)=\"dialogRef.close()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n    <!--    *ngFor=\"let file of uploadService.uploadData\"-->\n    <ng-container *ngFor=\"let file of uploadService.uploadDataNew\">\n      <mat-card class=\"mb-2\" *ngIf=\"file.calculatedTime !== '0 Seconds'\">\n        <mat-card-title [class]=\"file.subOrderDetails.textColor\">{{file.subOrderDetails.subOrderName}} For Order\n          ID: {{file.orderId}} <span *ngIf=\"file.OrderId2\">{{file.OrderId2}}</span></mat-card-title>\n        <mat-card-subtitle *ngIf=\"file.calculatedTime !== '0 Seconds'\">Remaining Time\n          : {{file.calculatedTime}} For <strong>{{file.fileName}}</strong> File\n        </mat-card-subtitle>\n        <mat-card-subtitle *ngIf=\"file.calculatedTime === '0 Seconds'\" class=\"text-success\">Uploaded\n          <strong>{{file.fileName}}</strong> File Successfully\n        </mat-card-subtitle>\n        <mat-card-content>\n          <div class=\"row\">\n            <div\n              [ngClass]=\"{'col-md-10': file.calculatedTime !== '0 Seconds', 'col-md-12' : file.calculatedTime === '0 Seconds' }\">\n              <div class=\"progress mt-2\">\n                <div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\"\n                  aria-valuemin=\"0\" aria-valuemax=\"100\" [style.width]=\"file.progress + '%'\">\n                  {{file.progress}}%\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-2 text-center\" *ngIf=\"file.calculatedTime !== '0 Seconds' && file.showCancel === true\">\n              <button mat-mini-fab [id]=\"htmlID.Button + 'cancel'\" aria-label=\"Example icon button with a home icon\"\n                class=\"bg-danger\" (click)=\"cancelSubScribe(file.subScribe, file.orderId , file)\">\n                <mat-icon>highlight_off</mat-icon>\n              </button>\n            </div>\n            <p class=\"mt-2\">Upload Status: <span *ngIf=\"file.showCancel\"\n                [ngClass]=\"file.progress < 100 ? 'text-warning' : 'text-success'\">{{file.progress < 100 ? \"uploading\"\n                  : \"Finished\" }}</span>\n                  <span class=\"text-danger\" *ngIf=\"!file.showCancel\">canceled</span></p>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </ng-container>\n  </div>\n  <div class=\"row\" *ngIf=\"uploadService.uploadDataNew.length === 0\">\n    <div class=\"col-md-12\">\n      <div class=\"alert text-center alert-danger\" role=\"alert\">\n        No Files Uploaded\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProgressComponent } from './Components/progress/progress.component';\nimport {AngularMaterialModule} from '../../../../../shared/shared-modules/angular-material.module';\n\n\n\n@NgModule({\n  declarations: [\n    ProgressComponent\n  ],\n  imports: [\n    CommonModule,\n    AngularMaterialModule\n  ],\n  exports: [ProgressComponent]\n})\nexport class WidgetsModule { }\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from '../../../../shared/shared-guards/auth-guard/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => import('./Pages/AuthPage/auth-page.module').then(m => m.AuthPageModule)\n  },\n  {\n    path: 'connect-modules',\n    loadChildren: () => import('./Pages/ConnectModules/connect-modules.module').then(m => m.ConnectModulesModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '',\n    redirectTo: 'auth/sign-in',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    redirectTo: 'auth/sign-in',\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary connect app component\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-10-25\n */\nimport { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, NavigationStart, Router, Event } from '@angular/router';\nimport { LoaderService } from '../../../../shared/shared-services/loader.service';\nimport { LangService } from '../../../../shared/shared-services/lang.service';\nimport { LoginService } from './Services/AuthServices/LoginService/login.service';\nimport { CStaticIds } from '../../../../shared/shared-static-id/shared-static-id';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'connect';\n  currentUrl: string = '';\n  lang = localStorage.getItem('language');\n  htmlID = CStaticIds;\n  /**\n   * The Requirements For The Construction Of The app component\n   * @param router for routing\n   * @param loaderService for using LoaderService\n   * @param langService for using LangService\n   * @param loginService for using LogInService\n   */\n  constructor(public router: Router, private loaderService: LoaderService, private langService: LangService, private loginService: LoginService) {\n    if (!localStorage.getItem('language')) {\n      localStorage.setItem('language', 'en');\n    }\n    this.langService.changeLanguage(this.lang);\n\n    let name = localStorage.getItem('fName');\n    let id = localStorage.getItem('userCNId');\n    const expiredPass = localStorage.getItem('newPass');\n    if(name && id && !expiredPass){\n      localStorage.setItem('userCNId',id)\n      this.router.navigate(['connect-modules', 'View-Orders-page']);\n    }\n    if (localStorage.getItem('rememberUser') === 'true' || null) {\n      this.router.navigate(['connect-modules', 'View-Orders-page']);\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.router.events.subscribe((routerEvent: Event) => {\n      if (routerEvent instanceof NavigationStart) {\n        this.loaderService.show();\n        this.currentUrl = routerEvent.url.substring(\n          routerEvent.url.lastIndexOf('/') + 1\n        );\n      }\n      if (routerEvent instanceof NavigationEnd) {\n        this.loaderService.hide();\n      }\n      window.scrollTo(0, 0);\n    });\n  }\n}\n","<router-outlet></router-outlet>\n<ngx-spinner [id]=\"htmlID.Spinner + 'app'\" bdColor=\"rgba(247, 145, 60, 0.5)\" size=\"medium\" color=\"#377FAE\" type=\"square-loader\"\n             [fullScreen]=\"true\"></ngx-spinner>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AngularMaterialModule} from 'shared/shared-modules/angular-material.module';\nimport {HttpClientModule, HTTP_INTERCEPTORS, HttpClient} from '@angular/common/http';\nimport {httpInterceptorProviders} from '../../../../shared/shared-interceptors';\nimport {NgxSpinnerModule} from 'ngx-spinner';\nimport {DatePipe} from '@angular/common';\nimport {APIsInterceptor} from './Interceptors/APis.interceptor';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {WidgetsModule} from './Widgets/widgets.module';\nimport {ButtonModule} from 'primeng/button';\nimport {TabViewModule} from 'primeng/tabview';\n\n\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    HttpClientModule,\n    NgxSpinnerModule,\n    ButtonModule,\n    WidgetsModule,\n    TabViewModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [httpInterceptorProviders, DatePipe,\n    {\n      provide: HTTP_INTERCEPTORS, useClass: APIsInterceptor, multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  connectLogo: './assets/Images/connectLog-transparent.png',\n  bannerNewUrl: './assets/banner.properties',\n  // cpRootURL: 'https://stg3.3ddx.net/',\n  cpRootURL: 'https://preprod2.3ddx.net/',\n\n  dateFormat: 'EEE MMM d yy h:mm a',\n  dateTimeZone: 'EST',\n  ordersPageRoute: '/connect-modules/View-Orders-page',\n  bannerImage: 'https://3ddiagnostix.com/newconnect-ui/VAADIN/themes/ovTheme/banner_v1.gif',\n  tutorial: 'https://3ddiagnostix.com/NewConnectDEMO2023.mp4'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export const APIName = {\n  login: 'ov-connect-webService-auth-olddb/resources/Users.Auth',\n  forgetPassword: 'ov-connect-webService-auth-olddb/resources/Users.Auth',\n  register: 'ov-connect-webService-userscn-olddb/resources/Users',\n  ORDERS: 'ov-connect-webservice-orders-olddb/resources/Orders',\n  getUserShippingLabel: 'ov-connect-webService-userscn-olddb/resources/Users',\n  addShippingLabel: 'ov-connect-webservice-orders-olddb/resources/Orders',\n  downloadFile: 'ov-connect-webservice-orders-olddb/resources/DownloadFiles',\n  changePassword: 'ov-connect-webService-userscn-olddb/resources/Users',\n  feedback: 'ov-connect-webService-feedback-olddb/resources/feedback',\n  doctors: 'ov-connect-webservice-orders-olddb/resources/Orders',\n  orderList: {\n    list: 'ov-connect-webservice-orders-olddb/resources/Orders',\n    sendToFriends: 'ov-connect-webservice-orders-olddb/resources/Orders',\n    getOrderById: 'ov-connect-webservice-orders-olddb/resources/Orders',\n    advancedSearch: 'ov-connect-webservice-orders-olddb/resources/Orders',\n    getGFMRorderDetails: 'ov-connect-webservice-orders-olddb/resources/Orders',\n    voucher: 'ov-connect-webservice-orders-olddb/resources/Orders'\n  },\n  orderDetailsActions: {\n    trackNumber: 'ov-connect-webservice-orders-olddb/resources/Orders',\n    downloadFile: 'ov-connect-webservice-orders-olddb/resources/DownloadFiles',\n    getSurgicalGuide: 'ov-connect-webservice-orders-olddb/resources/Orders',\n    confirmSurgicalGuide: 'ov-connect-webservice-orders-olddb/resources/Orders',\n    acceptRejectRestorationGFMR: 'ov-connect-webservice-orders-olddb/resources/Orders'\n  },\n  editprofile: 'ov-connect-webService-userscn-olddb/resources/Users',\n  uploadFile: 'ov-connect-webservice-orders-olddb/ScanUpload',\n  calculateCost: 'ov-connect-webService-costCalculation-olddb/resources/CostCalculator',\n  createNewPassword: 'CP-BackEnd/passManagement/changePassword',\n  adddoctor:'ov-connect-webService-userscn-olddb/resources/Users'\n};\n","export enum ResponseCodeEnum {\n  OK = 0,\n  NOT_IMPLEMENTED = 1000,\n  BAD_REQUEST = 400,\n  Invalid_Parameter = 1005,\n  Registeration_Failed_Email_Exist = 1004,\n  Credit_Card_Invalid = 1003,\n  Incomplete_Parameters = 1001,\n  LOGIN_FAILD_INVALID_TOKEN = 1006,\n  FAILED_TO_SEND_NOTIFICATION = 1011,\n  UNAUTHORIZED = 401,\n  Account_Deactivated = 1102,\n  Wrong_Password = 1202,\n  TOO_MANY_LOGIN_FAILED_ATTEMPTS = 1203,\n  Email_Not_Registered = 1302,\n  ORDER_ACCESS_DENIED = 1012,\n  NO_DOWNLOADS_FOR_REQUESTED_SUBORDER = 1013,\n  FILE_NOT_FOUND = 1014,\n  DOWNLOAD_UNAUTHORIZED_INVALID_BILLING = 1015,\n  FAILED_TO_SEND_SHIPPING_LABEL = 1016,\n  INTERNAL_SERVER_ERROR = 1010,\n  NOT_AUTHORIZED = 1002,\n  GENERIC_ERROR = -1,\n}\n","export enum ServiceNameEnum {\n\tCONNECT_BILLING = 'CONNECT_BILLING',\n\tVUsersCN = 'VUsersCN',\n\tORDER_ADD_SHIPPING_LABEL = 'ORDER_ADD_SHIPPING_LABEL',\n\tCONNECT_BILLING_SINGLE_SUBORDER = 'CONNECT_BILLING_SINGLE_SUBORDER',\n\tCONNECT_BILLING_CHARGED_RECEIPT = 'CONNECT_BILLING_CHARGED_RECEIPT',\n\tDOWNLOAD_FILE = 'DOWNLOAD_FILE',\n\tCHANGE_PASSWORD = 'ChangePassword',\n\tREGISTER_REQUEST = 'VUsersCN',\n\tFEEDBACK = '',\n\tVIEW_ORDER_ALL = 'VIEW_ORDER_ALL',\n\tSEND_TO_FRIEND = 'SendToFriend',\n\tTRACKING_NUMBER_RESTORATION = 'orderRestorationAddTrackingNumber',\n\tTRACKING_NUMBER_APPLIANCE = 'orderApplinceAddTrackingNumber',\n\tVIEW_ORDER_SURGICALGUIDE = 'VIEW_ORDER_SURGICALGUIDE',\n\tCONFIRM_SURGICAL_GUIDE = 'orderSurgicalGuideConfirm',\n\tCostCalculate = 'CostCalculate',\n\tADVANCED_SEARCH = 'VIEW_ORDER_ALL',\n\tACCEPT_REJECT_RESTORATION = 'orderRestorationGFMRApproveOrReject',\n\tADD_Doctor = \"InsertNewDoctor\",\n\tVIEW_ALL_PATIENTS = \"VIEW_ALL_PATIENTS\",\n\tVIEW_ORDER_RESTORATION_GFMR = 'VIEW_ORDER_RESTORATION_GFMR',\n\tVIEW_VOUCHER_HISTORY = \"VIEW_VOUCHER_HISTORY\"\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const token = localStorage.getItem('token');\n    const fName = localStorage.getItem('fName');\n\n    const auth = token ? token : fName;\n    if (auth) {\n      return true;\n    } else {\n      this.router.navigate(['auth', 'sign-in']);\n      return false\n        ;\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpResponse, HttpErrorResponse, HttpHeaderResponse\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {ResponseCodeEnum} from '../../shared-enums/ResponseCodeEnum';\nimport {ToastrService} from '../../shared-services/toastr.service';\nimport {ServiceNameEnum} from '../../shared-enums/ServiceNameEnum';\nimport {APIName} from '../../API/APIName';\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private toastService: ToastrService, private router: Router) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(req).pipe(map((event: HttpEvent<any>) => {\n      if (!req.url.includes('.json') && !req.url.includes(APIName.uploadFile) && !req.url.includes(APIName.createNewPassword)  && !req.url.includes('/assets/banner.properties')) {\n        if (event instanceof HttpResponse) {\n          if (event.body.responsCode === 0) {\n            event.body.responsCode = ResponseCodeEnum.OK;\n          }\n          if (req.body.services[0].serviceName === ServiceNameEnum.CHANGE_PASSWORD) {\n            if (event.body.reponses[0]) {\n              this.toastService.errorAlert(this.onGenerateErrorHandler(event.body.reponses[0].responsCode), 'Error');\n            }\n            if (event.body.reponses[0].responsCode === 0) {\n              event.body.responsCode = ResponseCodeEnum.OK;\n            }\n          } else if (event.body.responsCode) {\n            if (event.body.responsCode !== ResponseCodeEnum.OK) {\n              if (event.body.reponses) {\n                this.toastService.errorAlert(this.onGenerateErrorHandler(event.body.responsCode, event.body?.reponses[0]?.responsString), 'Error');\n              }\n              else {\n                this.toastService.errorAlert(this.onGenerateErrorHandler(event.body.responsCode, event.body?.responsString), 'Error');\n              }\n            }\n          }\n        }\n      }\n      return event;\n    })).pipe(\n      tap(\n        () => {\n        },\n        err => {\n          err.error?.text().then( (c: any) => {\n            const error = JSON.parse(c);\n            this.toastService.errorAlert(this.onGenerateErrorHandler(error.responsCode), 'Error');\n          });\n        }\n      )\n    );\n\n  }\n\n  onGenerateErrorHandler(responseCode: number, responsString?: string): string {\n    switch (responseCode) {\n      case ResponseCodeEnum.NOT_IMPLEMENTED:\n        return 'Not Supported Yet';\n      case ResponseCodeEnum.Invalid_Parameter:\n        return 'Error Invalid Parameter';\n      case ResponseCodeEnum.Registeration_Failed_Email_Exist:\n        return 'Registration Failed: Email Exist';\n      case ResponseCodeEnum.Credit_Card_Invalid:\n        return 'Credit Card Invalid';\n      case ResponseCodeEnum.Incomplete_Parameters:\n        return 'Incomplete parameters';\n      case ResponseCodeEnum.LOGIN_FAILD_INVALID_TOKEN:\n        const myLanguages = localStorage.getItem('language') || '';\n        localStorage.clear();\n        localStorage.setItem('language', myLanguages);\n        this.router.navigate(['auth', 'sign-in']);\n        return 'Token not found or expired, please login again';\n      case ResponseCodeEnum.FAILED_TO_SEND_NOTIFICATION:\n        return 'Failed To Send Notification';\n      case ResponseCodeEnum.UNAUTHORIZED:\n        return 'Unauthorized: Authorization failed';\n      case ResponseCodeEnum.Account_Deactivated:\n        return 'Unauthorized: Account Deactivated';\n      case ResponseCodeEnum.NOT_AUTHORIZED:\n        const myLanguage = localStorage.getItem('language') || '';\n        localStorage.clear();\n        localStorage.setItem('language', myLanguage);\n        this.router.navigate(['auth', 'sign-in']);\n        return 'Unauthorized: InValid Token';\n      case ResponseCodeEnum.Wrong_Password:\n        return 'Unauthorized: Wrong Password';\n      case ResponseCodeEnum.TOO_MANY_LOGIN_FAILED_ATTEMPTS:\n        return 'Too many failed login requests, for the security of the acccount you will have to wait 5 minutes before you can try again';\n      case ResponseCodeEnum.Email_Not_Registered:\n        return 'Unauthorized: Email Not Registered';\n      case ResponseCodeEnum.NO_DOWNLOADS_FOR_REQUESTED_SUBORDER:\n        return 'No downloads for requested suborder';\n      case ResponseCodeEnum.FILE_NOT_FOUND:\n        return 'File not found';\n      case ResponseCodeEnum.DOWNLOAD_UNAUTHORIZED_INVALID_BILLING:\n        return 'Your credit card information is not correct, you can continue using your Connect account but you will not be able to download completed cases until you correct your billing info';\n      case ResponseCodeEnum.FAILED_TO_SEND_SHIPPING_LABEL:\n          return responsString as string;\n      case ResponseCodeEnum.INTERNAL_SERVER_ERROR:\n        return 'Internal Server Error';\n      case ResponseCodeEnum.ORDER_ACCESS_DENIED:\n        return 'Access Denied';\n      default:\n        return 'Error Happened';\n    }\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor } from './error-interceptor/error.interceptor';\nimport { LoaderInterceptor } from './loader-interceptor/loader.interceptor';\n\nexport const httpInterceptorProviders = [\n\t{ provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\t{ provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\n];\n","import {Injectable, Injector} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {LoaderService} from '../../shared-services/loader.service';\nimport {finalize} from 'rxjs/operators';\nimport {APIName} from '../../API/APIName';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  /**\n   * The Requirements For The Construction Of The Interceptor\n   * @param {Injector} injector For The Injector\n   */\n  constructor(private injector: Injector) {\n  }\n\n  /**\n   * The Requirements For The Intercept To Initialize And Hide The Loader\n   * @param {HttpRequest<any>} request For The Request\n   * @param {HttpHandler} next For The handling\n   * @return Observable<HttpEvent<any>>\n   */\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const loaderService = this.injector.get(LoaderService);\n    if (!request.url.includes(APIName.uploadFile)) {\n      loaderService.show();\n    }\n    return next.handle(request).pipe(\n      finalize(() => loaderService.hide())\n    );\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTreeModule} from '@angular/material/tree';\n\nconst angularMaterialModule = [\n  MatInputModule,\n  MatFormFieldModule,\n  MatButtonModule,\n  MatTabsModule,\n  MatSnackBarModule,\n  MatCardModule,\n  MatSelectModule,\n  MatIconModule,\n  MatDialogModule,\n  MatMenuModule,\n  MatStepperModule,\n  MatCheckboxModule,\n  MatRadioModule,\n  MatExpansionModule,\n  MatBottomSheetModule,\n  MatListModule,\n  MatSidenavModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatTooltipModule,\n  MatBadgeModule,\n  MatToolbarModule,\n  MatRippleModule,\n  MatTreeModule\n];\n\n\n@NgModule({\n  imports: [\n    angularMaterialModule\n  ],\n  exports: [\n    angularMaterialModule\n  ]\n})\nexport class AngularMaterialModule {\n}\n","import {Injectable} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LangService {\n  private lang: BehaviorSubject<string> = new BehaviorSubject('');\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  getLang(): Observable<string> {\n    return this.lang.asObservable();\n  }\n\n  setLang(lang: null | string): void {\n    if (lang != null) {\n      this.lang.next(lang);\n    }\n  }\n\n  changeLanguage(lang: string | null): void {\n    if (typeof lang === 'string') {\n      localStorage.setItem('language', lang);\n    }\n    if (lang != null) {\n      this.translateService.use(lang);\n    }\n    this.setLang(lang);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgxSpinnerService} from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  constructor(private spinner: NgxSpinnerService) {\n  }\n\n  show(): void {\n    this.spinner.show();\n  }\n\n  hide(): void {\n    this.spinner.hide();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastrService {\n  tutorial = false;\n  constructor(private snackBar: MatSnackBar) {\n  }\n\n  addAlert(message: string, title: string, horizontalPosition: any): void {\n    const config = new MatSnackBarConfig();\n    config.panelClass = ['alert-success'];\n    config.duration = 2000;\n    config.horizontalPosition = horizontalPosition;\n    config.verticalPosition = 'top';\n    this.snackBar.open(message, title, config);\n  }\n\n  updateAlert(message: string, title: string, horizontalPosition: any): void {\n    const config = new MatSnackBarConfig();\n    config.panelClass = ['alert-info'];\n    config.duration = 2000;\n    config.horizontalPosition = horizontalPosition;\n    config.verticalPosition = 'top';\n    this.snackBar.open(message, title, config);\n  }\n\n  deleteAlert(message: string, title: string, horizontalPosition: any): void {\n    const config = new MatSnackBarConfig();\n    config.panelClass = ['alert-danger'];\n    config.duration = 2000;\n    config.horizontalPosition = horizontalPosition;\n    config.verticalPosition = 'top';\n    this.snackBar.open(message, title, config);\n  }\n\n  errorAlert(message: string, title: string): void {\n    const config = new MatSnackBarConfig();\n    config.panelClass = ['error-message'];\n    config.duration = 2000;\n    config.horizontalPosition = 'center';\n    config.verticalPosition = 'top';\n    this.snackBar.open(message, title, config);\n  }\n}\n","export const SubOrderType = {\n  LASER_SCAN: {name: 'Laser Scan', value: 1, uploadType: 'IOS'},\n  CONVERSION: {name: 'Conversion', value: 2, uploadType: 'DICOM'},\n  TREATMENT_PLAN: {name: 'Treatment Plan', value: 3, uploadType: 'DICOM'},\n  SURGICAL_GUIDE: {name: 'Surgical Guide', value: 4, uploadType: ''},\n  REPORT: {name: 'Report', value: 5, uploadType: 'DICOM'},\n  TRAINING: {name: 'Training', value: 7, uploadType: ''},\n  VOUCHER: {name: 'Voucher', value: 8, uploadType: ''},\n  SOFTWARE: {name: 'Software', value: 9, uploadType: ''},\n  RESTORATION: {name: 'Restoration', value: 11, uploadType: 'REST'},\n  MISC: {name: 'Misc', value: 12, uploadType: ''},\n  INTRAORAL_SCAN: {name: 'Intraoral Scan', value: 10, uploadType: 'IOS'},\n  GFMR: {name: 'Restoration (GFMR)', value: 15, uploadType: 'GFMR'}\n};\n","export const CStaticIds = {\n  Button: 'btn-',\n  CheckBox: 'chk-',\n  ComboBox: 'cbo-',\n  Dialog: 'dlg-',\n  DatePicker: 'dtp-',\n  DropDownList: 'ddl-',\n  Select: 'sl-',\n  Form: 'frm-',\n  Frame: 'fra-',\n  Image: 'img-',\n  Label: 'lbl-',\n  AnchorTags: 'lbk-',\n  List: 'lst-',\n  Menu: 'mnu-',\n  RadioButton: 'rdo-',\n  RichTextBox: 'rtf-',\n  Table: 'tbl-',\n  TabStrip: 'tab-',\n  TextArea: 'txa-',\n  Input: 'txt-',\n  Chevron: 'chv-',\n  DataGrid: 'dgd-',\n  DataList: 'dbl-',\n  DirectoryListBox: 'dir-',\n  DriveListBox: 'drv-',\n  FileListBox: 'fil-',\n  Panel: 'pnl-',\n  ProgressBar: 'prg-',\n  Slider: 'sld-',\n  Spinner: 'spn-',\n  StatusBar: 'sta-',\n  Timer: 'tmr-',\n  Toolbar: 'tlb-',\n  TreeView: 'tre-',\n};\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 52829;\nmodule.exports = webpackEmptyAsyncContext;"],"names":[],"sourceRoot":"webpack:///"}