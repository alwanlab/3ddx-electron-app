{"version":3,"file":"projects_connect_src_app_Pages_ConnectModules_connect-pages_order-page_order-page_module_ts.js","mappings":"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","sources":["./projects/connect/src/app/Pages/ConnectModules/connect-pages/order-page/order-details/order-details.component.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/order-page/order-details/order-details.component.html","./projects/connect/src/app/Pages/ConnectModules/connect-pages/order-page/order-list/order-list.component.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/order-page/order-list/order-list.component.html","./projects/connect/src/app/Pages/ConnectModules/connect-pages/order-page/order-page-routing.module.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/order-page/order-page.module.ts","./projects/connect/src/app/Resolvers/Order-Resolver/order.resolver.ts"],"sourcesContent":["/**\n * Copyright (c) 3ddx\n *\n * @summary view order details component\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-12\n */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SendToFriendComponent } from '../../../../../../../../../shared/shared-components/shared-order-list/send-to-friend/send-to-friend/send-to-friend.component';\nimport { environment } from '../../../../../../environments/environment';\nimport { ResponseCodeEnum } from '../../../../../../../../../shared/shared-enums/ResponseCodeEnum';\nimport { GenerateOrderDataService } from '../../../../../../../../../shared/shared-services/generate-order-data.service';\nimport { OrderListService } from '../../../../../Services/OrderServices/OrderListService/order-list.service';\nimport { ERequestTypes } from '../../../../../Models/Enums/RequestTypes/RequestTypes';\nimport { IApiData } from '../../../../../Models/Interfaces/APIs/apiData.model';\nimport { IOrderTrackNumber } from '../../../../../Models/Interfaces/Order/OrderById/order-track-number';\nimport { ServiceNameEnum } from '../../../../../../../../../shared/shared-enums/ServiceNameEnum';\nimport { ToastrService } from '../../../../../../../../../shared/shared-services/toastr.service';\nimport { IOrderDownload } from '../../../../../Models/Interfaces/Order/OrderById/order-download';\nimport { ISurgicalGuide } from '../../../../../Models/Interfaces/Order/SurgicalGuide/surgical-guide';\nimport { IGetSurgicalGuide } from '../../../../../Models/Interfaces/Order/SurgicalGuide/get-surgical-guide';\nimport { IConfirmSurgicalGuide } from '../../../../../Models/Interfaces/Order/SurgicalGuide/confirm-surgical-guide';\nimport { IAddToFriend } from '../../../../../../../../../shared/shared-interfaces/add-to-friend';\nimport { ISendToFriend } from '../../../../../Models/Interfaces/Order/OrderList/SendToFrind';\nimport { IAcceptRejectRestorationGFMR } from '../../../../../Models/Interfaces/Order/AcceptRejectRestorationGFMR/accept-reject-restoration-gfmr';\nimport { CStaticIds } from '../../../../../../../../../shared/shared-static-id/shared-static-id';\nimport { Subscription } from 'rxjs';\nimport { DeductedCostComponent } from '../../../../../../../../../shared/shared-components/shard-popup/deducted-cost/deducted-cost.component';\nimport { ActionsService } from 'projects/connect/src/app/Services/OrderServices/actions/actions.service';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.css']\n})\nexport class OrderDetailsComponent implements OnInit {\n  order: any;\n  fileInBatch!: boolean;\n  subscribeGFMRLowerUpload$!: Subscription;\n  subscribeGFMRUpperUpload$!: Subscription;\n  subscribeGFMRBiteUpload$!: Subscription;\n  orderId!: number;\n  logo = environment.connectLogo;\n  trackNumberOBJ = { requestType: ERequestTypes.UPDATE, services: [] } as IApiData<IOrderTrackNumber>;\n  downloadFile = { requestType: ERequestTypes.VIEW, services: [] } as IApiData<IOrderDownload>;\n  surgicalGuideOBJ = { requestType: ERequestTypes.VIEW, services: [] } as IApiData<ISurgicalGuide>;\n  surgicalGuideConfirmOBJ = { requestType: ERequestTypes.UPDATE, services: [] } as IApiData<IConfirmSurgicalGuide>;\n  sendToFriendOBJ = { requestType: ERequestTypes.ADD, services: [] } as IApiData<ISendToFriend>;\n  AcceptRejectRestorationGFMROBJ = { requestType: ERequestTypes.UPDATE, services: [] } as IApiData<IAcceptRejectRestorationGFMR>;\n  surgicalGuide = {} as IGetSurgicalGuide;\n  htmlID = CStaticIds;\n\n  /**\n   * The Requirements For The Construction Of The Component\n   * @param router For The routing\n   * @param dialog For The dialogue\n   * @param activeRoute For The activeRoute\n   * @param generateOrderDataService For The generateOrderDataService\n   * @param orderService For The orderService\n   * @param orderDetailsService For The orderDetailsService\n   * @param toastService For The toastService\n   * @param downloadService For The downloadService\n   * @param uploadService For The uploadService\n   * @param uploadProgressService For The ploadProgressService\n   * @param surgicalGuideService For The surgicalGuideService\n   * @param acceptRejectRestorationService For The acceptRejectRestorationService\n   */\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n    private activeRoute: ActivatedRoute,\n    private orderService: OrderListService,\n    private toastService: ToastrService,\n    public actionService: ActionsService,\n    private generateOrderDataService: GenerateOrderDataService) {\n  }\n\n  ngOnInit(): void {\n    this.activeRoute.params.subscribe(params => {\n      if (params.orderId) {\n        this.orderId = +params.orderId;\n      }\n    });\n    this.getOrderDetails();\n  }\n\n\n  /**\n   * get order details\n   * @return void\n   */\n  getOrderDetails(): void {\n    this.activeRoute.data.subscribe(res => {\n      if (res.orderDetails.responsCode === ResponseCodeEnum.OK) {\n        this.actionService.orderData = this.generateOrderDataService.onGenerateArr(res.orderDetails.data.VIEW_ORDER_ALL)[0];\n      }\n    });\n  }\n\n\n  /**\n   * navigate to view all orders list\n   * @return void\n   */\n  viewOrders(): void {\n    this.router.navigate(['connect-modules', 'View-Orders-page']);\n  }\n\n  /**\n   * navigate to add to order\n   * @return void\n   */\n  onNavigateToAddToOrder(): void {\n    this.router.navigate(['connect-modules', 'add-order-pages', this.orderId]);\n  }\n\n  /**\n   * send order to friend pop-up\n   * @param order sent order\n   * @return void\n   */\n  sendToFriend(order: any): void {\n    const dialogRef = this.dialog.open(SendToFriendComponent, {\n      minWidth: '50vw',\n      maxWidth: '70vw',\n      maxHeight: '90vh',\n      data: {\n        logo: this.logo,\n        order\n      }\n    });\n    dialogRef.afterClosed().subscribe((result: IAddToFriend) => {\n      if (result) {\n        result.orderId = this.orderId;\n        this.addToFriend(result);\n      }\n    });\n  }\n\n  /**\n   * set sent order object and send order to friend\n   * @param orderDetails sent order\n   * @return void\n   */\n  addToFriend(orderDetails: IAddToFriend): void {\n    this.sendToFriendOBJ.services[0] = {\n      sharedOrderEnum: orderDetails.sharedOrderEnum,\n      columns: [],\n      ConditionsAnded: false,\n      serviceName: ServiceNameEnum.SEND_TO_FRIEND,\n      orderId: orderDetails.orderId,\n      friendEmail: orderDetails.friendMail,\n    };\n    this.orderService.sendOrderToFriend(this.sendToFriendOBJ).subscribe(res => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        this.toastService.addAlert('Sent Successfully', 'Sent To Friend', 'start');\n      }\n    });\n  }\n\n  isFormat(): boolean {\n    return this.actionService.orderData.subOrders.find((sub: any) => sub.subOrderType === 'Conversion');\n  }\n\n  istype(): boolean {\n    return this.actionService.orderData.subOrders.find((sub: any) => sub.subOrderType === 'Conversion' || sub.subOrderType === 'Full Guided');\n\n  }\n  viewDeductedDetails(order: any): void {\n    const deductedSubOrders = order.subOrders.filter((subOrder: any) => subOrder.deductedCost);\n    const dialogRef = this.dialog.open(DeductedCostComponent, {\n      minWidth: '50vw',\n      minHeight: '40vh',\n      maxWidth: '80vw',\n      maxHeight: '90vh',\n      autoFocus: false,\n      data: {\n        logo: this.logo,\n        deductedSubOrders,\n      }\n    });\n  }\n}\n","<mat-card style=\"margin-bottom: 80px\" class=\"px-0 pt-0 mt-2\">\n  <div class=\"d-flex justify-content-end mb-5 p-2 show-less\">\n    <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"viewOrders()\" [id]=\"htmlID.Button + 'show-less'\">Show less</button>\n  </div>\n  <div class=\"order-detail-info d-flex justify-content-around\">\n    <div class=\"d-flex\">\n      <div mat-card-avatar class=\"example-header-image mr-3\">\n        <i class=\"pi pi-user text-warning mr-2\" style=\"font-size: 35px\"\n          *ngIf=\"actionService.orderData.orderType === 'Patient'\"></i>\n        <i class=\"pi pi-ticket text-warning mr-2\" style=\"font-size: 35px\"\n          *ngIf=\"actionService.orderData.orderType === 'Misc'\"></i>\n        <i class=\"pi pi-server text-warning mr-2\" style=\"font-size: 35px\"\n          *ngIf=\"actionService.orderData.orderType === 'Software'\"></i>\n      </div>\n      <div class=\"order-patient-name px-sm-3 px-md-0\">\n        <h3 [id]=\"htmlID.Input + 'patient-name'\" class=\"mb-1\"> {{actionService.orderData.client}}</h3>\n        <p [id]=\"htmlID.Input + 'orderId'\" class=\"mt-0\">{{orderId}}</p>\n      </div>\n    </div>\n    <div>\n      <div class=\"order-cost\">\n        <h3>Total Cost: <span class=\"order-price\" [id]=\"htmlID.Input + 'order-cost'\"\n            *ngIf=\"actionService.orderData.orderStatus?.subOrderName !== 'Voucher'\">{{actionService.orderData.totalCost}}</span>\n          <span class=\"font-bold\"\n            *ngIf=\"actionService.orderData.orderStatus?.subOrderName === 'Voucher'\">({{actionService.orderData.diffVoucherCost}})\n            out of {{actionService.orderData.totalCost}}</span>\n        </h3>\n      </div>\n      <div class=\"deducted-cost-btn\">\n        <button mat-button class=\"d-block orders-btn p-0\" [id]=\"htmlID.Button + 'deducted-cost'\"\n          (click)=\"viewDeductedDetails(actionService.orderData)\" *ngIf=\"actionService.orderData.hasDeductedCost\">\n          Deducted {{actionService.orderData.deductedTotalCost}}\n        </button>\n      </div>\n    </div>\n    <div\n      *ngIf=\"actionService.orderData.orderType === 'Patient' && actionService.orderData.orderStatus?.subOrderName !== 'Voucher'\">\n      <div class=\"order-arch\">\n        <h3 class=\"mb-1\" *ngIf=\"actionService.orderData.arch !== 'None'\">Arch of Interest: <span\n            [id]=\"htmlID.Input + 'arch-interest'\">{{actionService.orderData.arch}}</span> (<span\n            [id]=\"htmlID.Input + 'arch-type'\">{{actionService.orderData.archType}}</span>)</h3>\n      </div>\n      <div class=\"order-arch\" *ngIf=\"actionService.orderData.arch == 'Double Arch' && istype()\">\n        <h3 class=\"mb-1\">Maxilla: <span\n            [id]=\"htmlID.Input + 'arch-maxillatype'\">{{actionService.orderData.Maxilla}}</span> </h3>\n        <h3 class=\"mb-1\">Mandible: <span\n            [id]=\"htmlID.Input + 'arch-mandibletype'\">{{actionService.orderData.Mandible}}</span> </h3>\n      </div>\n      <div class=\"order-arch\"\n        *ngIf=\"actionService.orderData.arch != 'Double Arch'  && istype() && actionService.orderData.typeofArch\">\n        <h3 class=\"mb-1\">Type: <span\n            [id]=\"htmlID.Input + 'arch-typeofArch'\">{{actionService.orderData.typeofArch}}</span> </h3>\n      </div>\n      <div class=\"order-software\">\n        <h3 *ngIf=\"actionService.orderData.software\">Software: <span\n            [id]=\"htmlID.Input + 'software'\">{{actionService.orderData.software}}</span>\n        </h3>\n        <h3 *ngIf=\"isFormat() && actionService.orderData.formatEnum !== 'None'\">Format: <span\n            [id]=\"htmlID.Input + 'format'\">{{actionService.orderData.formatEnum}}</span>\n        </h3>\n      </div>\n      <div class=\"order-radiologist\">\n        <h3 *ngIf=\"actionService.orderData.radiologist && actionService.orderData.radiologist !== 'Not Assigned'\">\n          Radiologist: <span [id]=\"htmlID.Input + 'radiologist'\">{{actionService.orderData.radiologist}}</span></h3>\n      </div>\n    </div>\n    <div class=\"order-btns\">\n      <button mat-button class=\"d-block\" [id]=\"htmlID.Button + 'add-to-order'\" color=\"primary\"\n        *ngIf=\"(actionService.orderData.isOwner) && (actionService.orderData.orderStatus?.subOrderName !== 'Voucher') && actionService.orderData.orderType === 'Patient' && actionService.orderData.checkAddToOrder\"\n        (click)=\"onNavigateToAddToOrder()\">Add To order\n      </button>\n      <button mat-button class=\"d-block\" [id]=\"htmlID.Button + 'send-to-friend'\" color=\"primary\"\n        *ngIf=\"(!actionService.orderData.isOwner || actionService.orderData.orderStatus?.subOrderName !== 'Voucher') && actionService.orderData.orderType !== 'Software'\"\n        (click)=\"sendToFriend(actionService.orderData)\">\n        Send To a Friend\n      </button>\n    </div>\n  </div>\n  <div class=\"row mt-4 mx-2\">\n    <div class=\" col-xl-3 col-lg-4 col-md-6 col-sm-12 mt-5\" *ngFor=\"let subOrder of actionService.orderData.subOrders\">\n      <app-order-details-card [orderDetails]=\"subOrder\" [orderId]=\"orderId\" [logo]=\"logo\"\n        [patientName]=\"actionService.orderData.patientName\" [scanningCenter]=\"actionService.orderData.scanningCenter\"\n        [surgicalGuide]=\"surgicalGuide\"\n        (onConfirmingSurgicalGuide)=\"actionService.confirmSurgicalGuide($event, orderId)\"\n        (onSendingStoneModel)=\"actionService.sendStoneModel(order.orderId)\"\n        (onUploadingFiles)=\"actionService.uploadMissingFiles()\" (onDownloadFile)=\"actionService.onDownloadFile($event)\"\n        (onUploadFileEmmit)=\"actionService.onUploadFileEmmit($event, orderId)\"\n        (onPrepareTrackingNumberEmmit)=\"actionService.onPrepareTrackingNumber($event, orderId)\"\n        (onUploadGRMRFilesEmmit)=\"actionService.onUploadGRMRFilesEmmit($event, orderId)\"\n        (onAcceptRejectRestorationGFMREmmit)=\"actionService.onAcceptRejectRestorationGFMR($event, orderId)\">\n      </app-order-details-card>\n    </div>\n  </div>\n</mat-card>\n","/**\n * Copyright (c) 3ddx\n *\n * @summary view order list component\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-12\n */\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { environment } from '../../../../../../environments/environment';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ResponseCodeEnum } from '../../../../../../../../../shared/shared-enums/ResponseCodeEnum';\nimport { IOrderListData } from '../../../../../Models/Interfaces/Order/OrderList/OrderListData';\nimport { IAddToFriend } from '../../../../../../../../../shared/shared-interfaces/add-to-friend';\nimport { ISendToFriend } from '../../../../../Models/Interfaces/Order/OrderList/SendToFrind';\nimport { IApiData } from '../../../../../Models/Interfaces/APIs/apiData.model';\nimport { ERequestTypes } from '../../../../../Models/Enums/RequestTypes/RequestTypes';\nimport { ServiceNameEnum } from 'shared/shared-enums/ServiceNameEnum';\nimport { OrderListService } from '../../../../../Services/OrderServices/OrderListService/order-list.service';\nimport { ToastrService } from '../../../../../../../../../shared/shared-services/toastr.service';\nimport { IAdvancedSearch } from '../../../../../Models/Interfaces/Order/AdvancedSearch/advanced-search';\nimport { APIName } from 'shared/API/APIName';\nimport { IVoucherId } from 'projects/connect/src/app/Models/Interfaces/Order/OrderList/Voucher';\nimport { ActionsService } from '../../../../../Services/OrderServices/actions/actions.service';\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.css']\n})\nexport class OrderListComponent implements OnInit, OnDestroy{\n  logo = environment.connectLogo;\n  orderList: IOrderListData[] = [];\n  sendToFriendOBJ = { requestType: ERequestTypes.ADD, services: [] } as IApiData<ISendToFriend>;\n  advancedSearchOBJ = { requestType: ERequestTypes.VIEW, services: [] } as IApiData<IAdvancedSearch>;\n  Voucher = {\n    env: environment.cpRootURL,\n    api: APIName.orderList.voucher,\n    VoucherReq: { requestType: ERequestTypes.VIEW, services: [] } as IApiData<IVoucherId>\n  }\n  ordersCount: any = 0;\n  /**\n   * The Requirements For The Construction Of The Component\n   * @param router For The routing\n   * @param route For using activated route\n   * @param orderListService for getting orders list\n   * @param toastService To show request notifications\n   * @param actionService to fire action function\n   */\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastService: ToastrService,\n    public orderListService: OrderListService,\n    public actionService: ActionsService\n  ) {\n  }\n\n  /**\n   * onInit get order list , orders count and check for page number\n   * @return void\n   */\n  ngOnInit(): void {\n    if (!this.orderListService.filter){\n      if (this.orderListService.showOrderDetails){\n        this.checkPageNumber();\n      }\n    }\n    this.getOrderList();\n    this.orderListService.showOrderDetails = false;\n  }\n  /**\n   * paginate orders\n   * @param event\n   * @return void\n   */\n  paginationOrder(event?: Event) {\n    window.scrollTo(0, 0);\n    this.orderListService.paginationOrderResolver().subscribe((res: any) => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        this.orderListService.orderList = res.data.VIEW_ORDER_ALL;\n      }\n    });\n  }\n\n  /**\n   * navigate to view order details\n   * @param id order id\n   * @return void\n   */\n  navigateToOrder(id: number): void {\n    this.orderListService.showOrderDetails = true;\n    this.orderListService.filteredPageNumber = this.orderListService.pageNumber;\n    this.router.navigate(['connect-modules', 'View-Orders-page', id]);\n  }\n  /**\n   * reload orders\n   * @return void\n   */\n  reload(): void {\n   this.paginationOrder();\n  }\n\n  /**\n   * getting order list\n   * @return void\n   */\n  getOrderList(): void {\n    this.route.data.subscribe(res => {\n      if (res.OrderList.responsCode === ResponseCodeEnum.OK) {\n        this.orderListService.viewOrders = false;\n        this.orderListService.orderList = res.OrderList.data.VIEW_ORDER_ALL;\n        this.getListPagination();\n      }\n    });\n  }\n\n  /**\n   * sending order to friend\n   * @param orderDetails sent order details\n   * @return void\n   */\n  addToFriend(orderDetails: IAddToFriend): void {\n    this.sendToFriendOBJ.services[0] = {\n      sharedOrderEnum: orderDetails.sharedOrderEnum,\n      columns: [],\n      ConditionsAnded: false,\n      serviceName: ServiceNameEnum.SEND_TO_FRIEND,\n      orderId: orderDetails.orderId,\n      friendEmail: orderDetails.friendMail,\n    };\n    this.orderListService.sendOrderToFriend(this.sendToFriendOBJ).subscribe(res => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        this.toastService.addAlert('Sent Successfully', 'Sent To Friend', 'start');\n      }\n    });\n  }\n\n  /**\n   * filter orders\n   * @param event filter data\n   * @return void\n   */\n  onFilterOrder(event: { dateEnd: any, dateStart: any, orderType: number, scanningCenter: string, patientName: string, doctorName: string }): void {\n    this.orderListService.viewOrders = false;\n    this.orderListService.pageOffset = 0;\n    this.checkPageNumber();\n    this.orderListService.onFilterOrder(event).subscribe(res => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        this.orderListService.orderList = res.data.VIEW_ORDER_ALL;\n        this.getListPagination();\n      }\n    });\n  }\n\n  /**\n   * navigate to add to order\n   * @param orderId order id\n   * @return void\n   */\n  onNavigateToAddToOrder(orderId: number): void {\n    this.router.navigate(['connect-modules', 'add-order-pages', orderId]);\n  }\n  /**\n   * stay on the same page number if return from order details\n   * @return void\n   */\n  checkPageNumber(): void {\n    if (!this.orderListService.showOrderDetails) {\n      this.orderListService.firstOrders = 0;\n      this.orderListService.pageNumber = 0;\n    }\n    localStorage.setItem('pageNumber', String(this.orderListService.pageNumber));\n  }\n  /**\n   * get orders count for pagination pages\n   * @return void\n   */\n  getListPagination(): void {\n    this.orderListService.getOrderListPagination().subscribe(res => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        this.ordersCount = this.orderListService.ordersCount = res.data.VIEW_ORDER_ALL[0].ordersCount;\n          this.orderListService.viewOrders = true;\n      }\n    });\n  }\n  /**\n   * patient name search\n   * @return void\n   */\n  search(): void {\n    this.orderListService.returnToFirstPage();\n    this.orderListService.viewOrders = false;\n    if (this.orderListService.patientName || this.orderListService.searchValue) {\n      this.orderListService.searchPatient = true;\n      this.orderListService.getAllOrders = false;\n      this.orderListService.filter = false;\n      this.orderListService.patientSearch().subscribe(res => {\n          if (res.responsCode === ResponseCodeEnum.OK) {\n            this.orderListService.orderList = res.data.VIEW_ORDER_ALL;\n            this.getListPagination();\n          }\n        });\n    }\n    else {\n        this.orderListService.clearSearchData();\n        this.orderListService.reloadOrderList();\n    }\n  }\n  /**\n   * change patient name value\n   * @return void\n   */\n  getPatientName(event: any): void {\n    if (event) { this.orderListService.patientName = event.target.value; }\n  }\n  ngOnDestroy(): void {\n    this.orderListService.pageSize = 21;\n  }\n}\n","<ng-container *ngIf=\"orderListService.viewOrders\">\n    <app-view-orders [logoSrc]=\"logo\"\n                 (orderDetails)=\"navigateToOrder($event)\"\n                 [orderList]=\"orderListService.orderList\"\n                 (reload)=\"reload()\"\n                 [Voucher]=\"Voucher\"\n                 (paginationOrder)=\"paginationOrder($event)\"\n                 [showShorMoreBtn]=\"orderListService.showShorMoreBtn\"\n                 (addToOrderPage)=\"onNavigateToAddToOrder($event)\"\n                 (filterSearch)=\"onFilterOrder($event)\"\n                 (addToFriend)=\"addToFriend($event)\"\n                 (onUploadFileEmmit)=\"actionService.onUploadFileEmmit($event)\"\n                 (onDownloadFile)=\"actionService.onDownloadFile($event)\"\n                 (onUploadGRMRFilesEmmit)=\"actionService.onUploadGRMRFilesEmmit($event)\"\n                 (onConfirmingSurgicalGuide)=\"actionService.confirmSurgicalGuide($event)\"\n                 (onAcceptRejectRestorationGFMREmmit)=\"actionService.onAcceptRejectRestorationGFMR($event)\"\n                 (onPrepareTrackingNumberEmmit)=\"actionService.onPrepareTrackingNumber($event)\"\n                 [ordersCount]=\"orderListService.ordersCount\"\n                 (patientNameSearch)=\"search()\"\n                 (onChangePatientName)=\"getPatientName($event)\"\n                 [patients]=\"orderListService.patients\"></app-view-orders>\n</ng-container>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {OrderListComponent} from './order-list/order-list.component';\nimport {OrderDetailsComponent} from './order-details/order-details.component';\nimport {OrderResolver} from '../../../../Resolvers/Order-Resolver/order.resolver';\nimport {OrderDetailsResolver} from '../../../../Resolvers/Order-Details/order-details.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderListComponent,\n    resolve: {\n      OrderList: OrderResolver,\n    },\n  },\n  {\n    path: ':orderId',\n    component: OrderDetailsComponent,\n    data: {breadcrumbs: ['Order Details']},\n    resolve: {\n      orderDetails: OrderDetailsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrderPageRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OrderPageRoutingModule } from './order-page-routing.module';\nimport { OrderListComponent } from './order-list/order-list.component';\nimport {SharedComponentsModule} from '../../../../../../../../shared/shared-components/shared-components.module';\nimport { OrderDetailsComponent } from './order-details/order-details.component';\nimport {AngularMaterialModule} from '../../../../../../../../shared/shared-modules/angular-material.module';\n\n\n@NgModule({\n  declarations: [\n    OrderListComponent,\n    OrderDetailsComponent\n  ],\n  imports: [\n    CommonModule,\n    OrderPageRoutingModule,\n    SharedComponentsModule,\n    AngularMaterialModule\n  ]\n})\nexport class OrderPageModule { }\n","/**\n * Copyright (c) 3ddx\n *\n * @summary order-list resolver\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-12\n */\nimport { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport {OrderListService} from '../../Services/OrderServices/OrderListService/order-list.service';\nimport {IMainResponse} from '../../Models/Interfaces/Main/MainResponse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderResolver implements Resolve<IMainResponse> {\n  /**\n   * The Requirements For The Construction Of The resolver\n   * @param orderListService for OrderListService\n   */\n  constructor(private orderListService: OrderListService) {\n  }\n  /**\n   * get order list\n   * @param route for ActivatedRouteSnapshot\n   * @param state for RouterStateSnapshot\n   * @return Observable<IMainResponse>\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IMainResponse> | any {\n    return this.orderListService.paginationOrderResolver();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}