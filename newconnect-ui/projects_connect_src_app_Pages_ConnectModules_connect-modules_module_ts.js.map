{"version":3,"file":"projects_connect_src_app_Pages_ConnectModules_connect-modules_module_ts.js","mappings":"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","sources":["./projects/connect/src/app/Pages/ConnectModules/connect-modules-routing.module.ts","./projects/connect/src/app/Pages/ConnectModules/connect-modules.module.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/connect-pages.component.ts","./projects/connect/src/app/Pages/ConnectModules/connect-pages/connect-pages.component.html","./projects/connect/src/app/Resolvers/Patient-Name/patient-name.resolver.ts","./projects/connect/src/app/Resolvers/Shipping-Label/shipping-label.resolver.ts","./projects/connect/src/app/Services/FeedbackService/feedback.service.ts","./projects/connect/src/app/Services/ShippingLabelService/shipping-label.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConnectPagesComponent } from './connect-pages/connect-pages.component';\nimport { ShippingLabelResolver } from '../../Resolvers/Shipping-Label/shipping-label.resolver';\nimport { PatientNameResolver } from '../../Resolvers/Patient-Name/patient-name.resolver';\nimport { OrderResolver } from '../../Resolvers/Order-Resolver/order.resolver';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConnectPagesComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'View-Orders-page'\n      },\n      {\n        path: 'View-Orders-page',\n        loadChildren: () => import('./connect-pages/order-page/order-page.module').then(m => m.OrderPageModule),\n        data: { breadcrumbs: ['View Orders List'] }\n      },\n      {\n        path: 'add-order-pages',\n        loadChildren: () => import('./connect-pages/add-order-pages/add-order-pages.module').then(m => m.AddOrderPagesModule),\n        data: { breadcrumbs: ['Add New Order'] }\n      },\n      {\n        path: 'billing-page',\n        loadChildren: () => import('./connect-pages/billing-pages/billing-pages.module').then(m => m.BillingPagesModule),\n        data: { breadcrumbs: ['Billing'] }\n      },\n      {\n        path: 'setting-page',\n        loadChildren: () => import('./connect-pages/settings-page/settings-page.module').then(m => m.SettingsPageModule),\n        data: { breadcrumbs: ['Edit Profile'] }\n      },\n      {\n        path: 'password-page',\n        loadChildren: () => import('./connect-pages/change-password-page/change-password-page.module').then(m => m.ChangePasswordPageModule),\n        data: { breadcrumbs: ['Change Password'] }\n      },\n      {\n        path: 'shipping-label-page',\n        loadChildren: () => import('./connect-pages/shipping-label-page/shipping-label.module').then(m => m.ShippingLabelModule),\n        data: { breadcrumbs: ['Shipping Label'] }\n      }\n    ],\n    resolve: {\n      PatientName: PatientNameResolver,\n      userData: ShippingLabelResolver,\n      // OrderList: OrderResolver,\n    },\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConnectModulesRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConnectModulesRoutingModule } from './connect-modules-routing.module';\nimport { ConnectPagesComponent } from './connect-pages/connect-pages.component';\nimport { AngularMaterialModule } from '../../../../../../shared/shared-modules/angular-material.module';\nimport { SharedComponentsModule } from 'shared/shared-components/shared-components.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\nimport { PatientNameResolver } from '../../Resolvers/Patient-Name/patient-name.resolver';\n\n\n@NgModule({\n    declarations: [\n        ConnectPagesComponent,\n    ],\n    imports: [\n        CommonModule,\n        ConnectModulesRoutingModule,\n        AngularMaterialModule,\n        SharedComponentsModule,\n        TranslateModule,\n        FormsModule\n    ],\n    providers: [\n        PatientNameResolver\n    ]\n})\nexport class ConnectModulesModule { }\n","/**\n * Copyright (c) 3ddx\n *\n * @summary connect pages component\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-10-25\n */\nimport { Component, DoCheck, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { FeedbackComponent } from 'shared/shared-components/shard-popup/feedback/feedback.component';\nimport {\n  ActivatedRoute,\n  ActivationEnd,\n  Event,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart, PRIMARY_OUTLET,\n  RouteConfigLoadStart,\n  Router\n} from '@angular/router';\nimport { environment } from '../../../../environments/environment';\nimport { FeedbackService } from '../../../Services/FeedbackService/feedback.service';\nimport { IApiData } from '../../../Models/Interfaces/APIs/apiData.model';\nimport { IFeedback } from '../../../Models/Interfaces/Feedback/Feedback';\nimport { ERequestTypes } from '../../../Models/Enums/RequestTypes/RequestTypes';\nimport { ResponseCodeEnum } from '../../../../../../../shared/shared-enums/ResponseCodeEnum';\nimport { ToastrService } from '../../../../../../../shared/shared-services/toastr.service';\nimport { ServiceNameEnum } from '../../../../../../../shared/shared-enums/ServiceNameEnum';\nimport { NavigateToEnum } from '../../../../../../../shared/shared-enums/NavigateToEnum';\nimport { NavigateToService } from '../../../../../../../shared/shared-services/navigate-to.service';\nimport { filter, map } from 'rxjs/operators';\nimport { LangService } from '../../../../../../../shared/shared-services/lang.service';\nimport { UploadService } from '../../../Services/UploadService/upload.service';\nimport { ProgressComponent } from '../../../Widgets/Components/progress/progress.component';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { LoginService } from '../../../Services/AuthServices/LoginService/login.service';\nimport { CStaticIds } from '../../../../../../../shared/shared-static-id/shared-static-id';\nimport { OrderListService } from 'projects/connect/src/app/Services/OrderServices/OrderListService/order-list.service';\nimport { IAdvancedSearch } from '../../../Models/Interfaces/Order/AdvancedSearch/advanced-search';\nimport {TutorialComponent} from '../../../../../../../shared/shared-components/tutorial/tutorial.component';\n\n@Component({\n  selector: 'app-connect-pages',\n  templateUrl: './connect-pages.component.html',\n  styleUrls: ['./connect-pages.component.css']\n})\nexport class ConnectPagesComponent implements OnInit, DoCheck {\n  htmlID = CStaticIds;\n  connectUrls = [\n    {\n      page: 'View Orders', url: '/connect-modules/View-Orders-page', id: 'view-orders', callData: () => {\n        this.getAllOrders();\n      }\n    },\n    { page: 'Add Order', url: '/connect-modules/add-order-pages', id: 'add-order', callData: () => {} },\n    { page: 'Shipping Label', url: '/connect-modules/shipping-label-page', id: 'shipping-label', callData: () => {} },\n    { page: 'Billing', url: '/connect-modules/billing-page', id: 'billing', callData: () => {} },\n  ];\n  userName = '';\n  lang: any = '';\n  logo: string = environment.connectLogo;\n  feedbackOBJ = { requestType: ERequestTypes.ADD, services: [] } as IApiData<IFeedback>;\n  urlNavigations = NavigateToEnum;\n  dialogRef!: MatDialogRef<FeedbackComponent, any>;\n  dialogProgressRef!: MatDialogRef<ProgressComponent, any>;\n  dialogTutorialRef!: MatDialogRef<TutorialComponent, any>;\n  pageName = '';\n  breadcrumbs: { url: string, label: string, params: any }[] = [];\n  userData: any;\n  onlineParams: string | undefined;\n  @ViewChild('drawer') public drawer!: MatDrawer;\n  searchObj = { requestType: ERequestTypes.VIEW, services: [] } as IApiData<IAdvancedSearch>; patients: any;\n\n  /**\n   * The Requirements For The Construction Of The Component\n   * @param route For using activated route\n   * @param bottomSheet for using angular material bottom sheet\n   * @param toastService To show request notifications\n   * @param feedbackService for using FeedbackService\n   * @param dialog for using angular material dialog\n   * @param navigateToService for using NavigateToService\n   * @param langService for using langService\n   * @param uploadService for using UploadService\n   * @param loginService for using LogInService\n   * @param orderListService\n   * @param router for routing\n   */\n  constructor(\n    private bottomSheet: MatBottomSheet,\n    private feedbackService: FeedbackService,\n    public dialog: MatDialog,\n    public toastService: ToastrService,\n    public navigateToService: NavigateToService,\n    private route: ActivatedRoute,\n    public langService: LangService,\n    public uploadService: UploadService,\n    private loginService: LoginService,\n    public orderListService: OrderListService,\n    private router: Router) {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .pipe(map(() => this.route))\n      .pipe(map((route) => {\n        while (route.firstChild) {\n          route = route.firstChild;\n        }\n        return route;\n      }))\n      // tslint:disable-next-line:no-shadowed-variable\n      .pipe(filter(route => route.outlet === PRIMARY_OUTLET))\n      .subscribe(route => {\n\n        const snapshot = this.router.routerState.snapshot;\n        this.breadcrumbs = [];\n        const url = snapshot.url;\n        const routeData = route.snapshot.data;\n\n\n        const label = routeData.breadcrumbs;\n        const params = snapshot.root.params;\n\n        this.breadcrumbs.push({\n          url,\n          label,\n          params\n        });\n      });\n  }\n  /**\n   * get order list\n   * @return void\n   */\n  getAllOrders(): void {\n    this.orderListService.returnToFirstPage();\n    this.orderListService.clearSearchData();\n    this.orderListService.getAllOrders = true;\n    this.orderListService.patientName = '';\n    if (this.router.url === environment.ordersPageRoute){\n     this.orderListService.reloadOrderList();\n    }\n   window.scrollTo(0, 0 );\n  }\n\n  /**\n   * onInit get user name\n   * @return void\n   */\n  ngOnInit(): void {\n    this.route.data.subscribe(res => {\n      this.orderListService.patients = res.PatientName.data.VIEW_ORDER_ALL;\n      this.userData = res.userData.data.VUsersCN[0];\n    });\n  }\n  ngDoCheck(): void {\n    this.userName = localStorage.getItem('fName') + ' ' + localStorage.getItem('lName');\n    this.lang = localStorage.getItem('language');\n    this.onlineParams = `&Name_Full=${this.userName}&PhoneNumber=${this.userData.phone1}&Email=${this.userData.email}`;\n  }\n  /**\n   * open feedback pop-up and send feedback\n   * @return void\n   */\n  openFeedbackDialog(): void {\n    this.dialogRef = this.dialog.open(FeedbackComponent, {\n      disableClose: true,\n      data: {\n        logo: environment.connectLogo,\n      }\n    });\n    this.dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.feedbackOBJ.services[0] = {\n          msgBody: result.message,\n          msgSubject: result.subject,\n          columns: [],\n          ConditionsAnded: false,\n          serviceName: ServiceNameEnum.FEEDBACK,\n        };\n        this.sendFeedBack(this.feedbackOBJ);\n      }\n    });\n  }\n\n  /**\n   * log out\n   * @return void\n   */\n  logOut(): void {\n    this.loginService.logout();\n    this.orderListService.returnToFirstPage();\n    this.orderListService.clearSearchData();\n  }\n\n  /**\n   * send feedback\n   * @param feedbackOBJ feedback object\n   * @return void\n   */\n  sendFeedBack(feedbackOBJ: IApiData<IFeedback>): void {\n    this.feedbackService.sendFeedBack(feedbackOBJ).subscribe(res => {\n      if (res.responsCode === ResponseCodeEnum.OK) {\n        this.toastService.addAlert('Sent Successfully', 'Feedback', 'start');\n      }\n    });\n  }\n  /**\n   * view uploads\n   * @return void\n   */\n  viewUploads(): void {\n    this.dialogProgressRef = this.dialog.open(ProgressComponent, {\n      minWidth: '50vw',\n      maxHeight: '80vh',\n      data: {\n        logo: environment.connectLogo,\n      }\n    });\n  }\n\n  @HostListener('window:resize')\n  public onWindowResize(): void {\n    if (window.innerWidth <= 960) {\n      this.drawer.close();\n    } else {\n      this.drawer.open();\n    }\n  }\n  /**\n   * update uploads number\n   * @return number\n   */\n  filterUploads(): number {\n    const uploads = [...this.uploadService.uploadDataNew];\n    return uploads.filter((file: any) => file.progress !== 100).length;\n  }\n  /**\n   * clear search data on navigate to connect pages\n   * @return void\n   */\n  navigateToPage(): void {\n    this.orderListService.showOrderDetails = false;\n    this.orderListService.clearSearchData();\n    this.orderListService.viewOrders = false;\n  }\n\n  openTutorial(): void {\n    this.toastService.tutorial = false;\n    this.dialogTutorialRef = this.dialog.open(TutorialComponent, {\n      minWidth: '40vw',\n      height: '80vh',\n      data: {\n        logo: environment.connectLogo,\n      }\n    });\n  }\n}\n\n\n","<mat-drawer-container [class.drawer-opened]=\"drawer.opened\" class=\"example-container\">\n  <mat-drawer #drawer class=\"drawer animate__animated animate__fadeInLeft\" mode=\"side\" opened=\"true\">\n    <mat-toolbar class=\"header\">\n      <div>\n        <img [src]=\"logo\" class=\"w-100\" [id]=\"htmlID.Image + 'logo'\" alt=\"Logo\">\n      </div>\n      <button mat-mini-fab color=\"warn\" [id]=\"htmlID.Button + 'close'\" (click)=\"drawer.close()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-toolbar>\n    <br>\n    <br>\n    <br>\n    <div class=\"contents\" #drawer>\n      <mat-selection-list #shoes [multiple]=\"false\">\n        <mat-list-item [tabIndex]=\"i + 1\" *ngFor=\"let link of connectUrls; let i = index\"  (click)=\"navigateToPage(); link.callData()\" [routerLink]=\"link.url\"\n          [id]=\"htmlID.List + 'connect-url-' + link.id\" [routerLinkActive]=\"['active']\">\n          <a [id]=\"htmlID.AnchorTags + 'connect-url-' + link.id\"> {{link.page | translate}}</a>\n        </mat-list-item>\n      </mat-selection-list>\n    </div>\n  </mat-drawer>\n  <mat-toolbar class=\"main header animate__animated animate__fadeInDown\">\n    <button mat-mini-fab class=\"mr-3\" color=\"warn\" [id]=\"htmlID.Button + 'open-menu'\" *ngIf=\"!drawer.opened\"\n      (click)=\"drawer.toggle()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <app-banner></app-banner>\n      <div class=\"d-flex justify-content-end ml-auto\">\n    <p class=\"mr-4 m-1 toll-free\" [id]=\"htmlID.Button + 'toll-free'\">Toll-Free: 1-866-834-7925\n    </p>\n    <button mat-mini-fab color=\"warn\" class=\"mr-2\" [matMenuTriggerFor]=\"langMenu\" [id]=\"htmlID.Button + 'translate'\">\n      <span>{{lang | uppercase }}</span>\n    </button>\n    <button mat-raised-button color=\"warn\" [id]=\"htmlID.Button + 'user'\"\n      [matMenuTriggerFor]=\"menu\">{{userName}}</button>\n    </div>\n  </mat-toolbar>\n  <div class=\"main contents animate__animated animate__zoomIn\">\n    <router-outlet></router-outlet>\n  </div>\n  <mat-toolbar style=\"position: fixed;\" class=\"main footer animate__animated animate__fadeInUp\">\n    <button mat-stroked-button class=\"m-1\" [matBadge]=\"filterUploads()\" matBadgePosition=\"above\"\n      matBadgeColor=\"primary\" [id]=\"htmlID.Button + 'view-upload'\" (click)=\"viewUploads()\" color=\"warn\">\n      <mat-icon>file_upload</mat-icon>\n      View Uploads\n    </button>\n    <button mat-stroked-button class=\"m-1\" color=\"warn\" [id]=\"htmlID.Button + 'i-smile-on'\"\n      (click)=\"navigateToService.navigateTo(urlNavigations.I_SMILE_ON)\">\n      iSmileOn\n    </button>\n    <button mat-stroked-button class=\"m-1\" color=\"warn\" (click)=\"openFeedbackDialog()\"\n      [id]=\"htmlID.Button + 'feedback'\">Feedback\n    </button>\n    <button mat-stroked-button class=\"m-1\" color=\"warn\" [id]=\"htmlID.Button + 'online-assistant'\"\n      (click)=\"navigateToService.navigateTo(urlNavigations.ONLINE_ASSISTANT_URL, onlineParams)\">Online assistance\n    </button>\n    <button mat-stroked-button class=\"m-1\" color=\"warn\" [id]=\"htmlID.Button + 'ft-session'\"\n      (click)=\"navigateToService.navigateTo(urlNavigations.FT_SESSION)\">\n      Fine Tune\n    </button>\n    <button mat-stroked-button class=\"m-1\" color=\"warn\" [ngClass]=\"{'tutorial': toastService.tutorial}\" [id]=\"htmlID.Button + 'tutorial'\" (click)=\"openTutorial()\">\n      {{'Tutorial' | translate}}\n    </button>\n  </mat-toolbar>\n</mat-drawer-container>\n<mat-menu #menu=\"matMenu\">\n  <button (click)=\"orderListService.clearSearchData()\" mat-menu-item routerLink=\"/connect-modules/setting-page\" [id]=\"htmlID.Button + 'edit-profile'\">{{'Edit Profile' | translate }}\n  </button>\n  <button (click)=\"orderListService.clearSearchData()\" mat-menu-item routerLink=\"/connect-modules/password-page\" [id]=\"htmlID.Button + 'change-password'\">\n    {{'Change Password' | translate}}\n  </button>\n  <button mat-menu-item (click)=\"logOut()\" [id]=\"htmlID.Button + 'log-out'\">{{'LogOut' | translate}}</button>\n</mat-menu>\n<mat-menu #langMenu=\"matMenu\">\n  <button mat-menu-item (click)=\"langService.changeLanguage('en')\" [id]=\"htmlID.Button + 'translate-english'\">\n    English\n  </button>\n  <button disabled mat-menu-item (click)=\"langService.changeLanguage('fr')\" [id]=\"htmlID.Button + 'translate-french'\">\n    French\n  </button>\n</mat-menu>\n","/**\n * Copyright (c) 3ddx\n *\n * @summary  shipping label (get user data) resolver\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-8\n */\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { IMainResponse } from '../../Models/Interfaces/Main/MainResponse';\nimport { OrderListService } from 'projects/connect/src/app/Services/OrderServices/OrderListService/order-list.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PatientNameResolver implements Resolve<IMainResponse> {\n    /**\n     * The Requirements For The Construction Of The resolver\n     * @param orderListService for OrderListService\n     */\n    constructor(private orderListService: OrderListService) {\n    }\n    /**\n     * get user data\n     * @return Observable<IMainResponse>\n     */\n    resolve(): Observable<IMainResponse> {\n        return this.orderListService.getPatientName();\n    }\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary  shipping label (get user data) resolver\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-8\n */\nimport {Injectable} from '@angular/core';\nimport {Resolve} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport {IMainResponse} from '../../Models/Interfaces/Main/MainResponse';\nimport {ShippingLabelService} from '../../Services/ShippingLabelService/shipping-label.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShippingLabelResolver implements Resolve<IMainResponse> {\n  /**\n   * The Requirements For The Construction Of The resolver\n   * @param shippingLabelService for ShippingLabelService\n   */\n  constructor(private shippingLabelService: ShippingLabelService) {\n  }\n  /**\n   * get user data\n   * @return Observable<IMainResponse>\n   */\n  resolve(): Observable<IMainResponse> {\n    return this.shippingLabelService.getUserData();\n  }\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary send feedback service\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-11\n */\nimport {Injectable} from '@angular/core';\nimport {DataService} from '../DataService/data.service';\nimport {IApiData} from '../../Models/Interfaces/APIs/apiData.model';\nimport {IFeedback} from '../../Models/Interfaces/Feedback/Feedback';\nimport {IMainResponse} from '../../Models/Interfaces/Main/MainResponse';\nimport {Observable} from 'rxjs';\nimport {APIName} from '../../../../../../shared/API/APIName';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n  /**\n   * The Requirements For The Construction Of The service\n   * @param dataService for managing Http methods\n   */\n  constructor(private dataService: DataService) {\n  }\n  /**\n   * send feedback\n   * @param feedbackOBJ feedback object\n   * @return Observable<IMainResponse>\n   */\n  sendFeedBack(feedbackOBJ: IApiData<IFeedback>): Observable<IMainResponse> {\n    return this.dataService.post(APIName.feedback, feedbackOBJ);\n  }\n}\n","/**\n * Copyright (c) 3ddx\n *\n * @summary shipping label service ( getting user data, add new shipping label , download files)\n * @author Amr Mossad, Basel El-sawy, Mahmoud Hamza, Rana AbdelAziz\n *\n * Created at : 2021-12-8\n */\nimport {Injectable} from '@angular/core';\nimport {IGetUserData} from '../../Models/Interfaces/ShippingLabel/GetUserData';\nimport {ERequestTypes} from '../../Models/Enums/RequestTypes/RequestTypes';\nimport {ServiceNameEnum} from '../../../../../../shared/shared-enums/ServiceNameEnum';\nimport {DataService} from '../DataService/data.service';\nimport {Observable} from 'rxjs';\nimport {APIName} from '../../../../../../shared/API/APIName';\nimport {IMainResponse} from '../../Models/Interfaces/Main/MainResponse';\nimport {IAddShippingLabel} from '../../Models/Interfaces/ShippingLabel/AddShippingLabel';\nimport {IDownloadShippingLabelFile} from '../../Models/Interfaces/ShippingLabel/DownloadShippingLabelFile';\nimport {IApiData} from '../../Models/Interfaces/APIs/apiData.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShippingLabelService {\n  shippingLabelOBJ = {requestType: ERequestTypes.VIEW, services: []} as IApiData<IGetUserData>;\n  /**\n   * The Requirements For The Construction Of The service\n   * @param dataService for managing Http methods\n   */\n  constructor(private dataService: DataService) {\n  }\n  /**\n   * get user data\n   * @return Observable<IMainResponse>\n   */\n  getUserData(): Observable<IMainResponse> {\n    this.shippingLabelOBJ.services[0] = {\n      ConditionsAnded: true,\n      asc: false,\n      columns: [\n        'userCNId',\n        'userCNEnumId',\n        'userCNEnum',\n        'pwd',\n        'fName',\n        'lName',\n        'countryEnumId',\n        'countryEnum',\n        'stateEnumId',\n        'stateEnum',\n        'city',\n        'zipCode',\n        'activated',\n        'preferedRadiologyId',\n        'preferedRadiologyFirstName',\n        'preferedRadiologyLastName',\n        'preferedSalesAgentId',\n        'preferedSalesAgentFirstName',\n        'preferedSalesAgentLastName',\n        'assistantName',\n        'contractId',\n        'appliance',\n        'plasterModelArch',\n        'TreatmentPlanMinPrice',\n        'ConversionMinPrice',\n        'conversionOneShot',\n        'rushCost',\n        'timeStart',\n        'timeExp',\n        'ReportPrice',\n        'currencyEnumId',\n        'currencyEnum',\n        'languageEnumId',\n        'languageEnum',\n        'usersCNAdressesEnumId',\n        'usersCNAdressesEnum',\n        'address',\n        'emailEnumId',\n        'emailEnum',\n        'email',\n        'telecomEnumId',\n        'telecomEnum',\n        'telecom',\n        'creditCardEnumId',\n        'creditCard',\n        'creditCardTimeExp',\n        'laserScanCost',\n        'isPortableVersion'\n      ],\n      condition: {\n        anded: false,\n        argumentName: 'userCNId',\n        // @ts-ignore\n        argumentValue: +localStorage.getItem('userCNId'),\n        inBetween: false,\n        like: false,\n        not: false,\n      },\n      has: false,\n      ordersOwnerId: Number(localStorage.getItem('userCNId')),\n      pageNumber: -1,\n      pageSize: -1,\n      serviceName: ServiceNameEnum.VUsersCN,\n      sortedByColumnsIndices: [0]\n    };\n    return this.dataService.post(APIName.getUserShippingLabel, this.shippingLabelOBJ);\n  }\n  /**\n   * add shipping label\n   * @param shippingOBJ shipping label object\n   * @return Observable<IMainResponse>\n   */\n  addShippingLabel(shippingOBJ: IApiData<IAddShippingLabel>): Observable<IMainResponse> {\n    return this.dataService.post(APIName.addShippingLabel, shippingOBJ);\n  }\n  /**\n   * download files\n   * @param downloadOBJ download object\n   * @return Observable<any>\n   */\n  onDownloadFle(downloadOBJ: IApiData<IDownloadShippingLabelFile>): Observable<any> {\n    return this.dataService.postDownload(APIName.downloadFile, downloadOBJ);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}